# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Ad implements Node {
  id: ID!
  ad_position(where: AdPositionWhereInput): AdPosition!
  media_type: Int!
  name: String!
  link: String!
  image_url: String!
  content: String!
  end_time: DateTime
  enabled: Boolean!
}

type AdPosition implements Node {
  id: ID!
  type: Int!
  name: String!
  width: Int!
  height: Int!
  desc: String
  ads(where: AdWhereInput, orderBy: AdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ad!]
}

type Attribute implements Node {
  id: ID!
  code: Int!
  name: String!
  input_type: Int!
  values: String!
  sort_order: Int!
  category(where: AttributeCategoryWhereInput): AttributeCategory!
}

type AttributeCategory implements Node {
  id: ID!
  code: Int!
  name: String!
  enabled: Boolean!
  attributes(where: AttributeWhereInput, orderBy: AttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Attribute!]
}

type Brand implements Node {
  id: ID!
  code: Int!
  name: String!
  list_pic_url: String!
  simple_desc: String!
  pic_url: String!
  app_list_pic_url: String
  new_pic_url: String
  sort_order: Int
  new_sort_order: Int
  floor_price: Float!
  is_show: Boolean!
  is_new: Boolean
}

type Cart implements Node {
  id: ID!
  user(where: UserWhereInput): User!
  session_id: Int!
  product_stock(where: ProductStockWhereInput): ProductStock!
  count: Int!
}

type Category implements Node {
  id: ID!
  code: Int!
  name: String!
  keywords: String!
  front_desc: String!
  sort_order: Int!
  show_index: Int!
  is_show: Boolean!
  banner_url: String!
  icon_url: String!
  img_url: String!
  wap_banner_url: String!
  level: String!
  type: Int!
  front_name: String!
  subs(where: SubCategoryWhereInput, orderBy: SubCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SubCategory!]
}

type Channel implements Node {
  id: ID!
  name: String!
  url: String!
  icon_url: String!
  sort_order: Int!
}

type Comment implements Node {
  id: ID!
  code: Int!
  type_id: Int!
  product(where: ProductWhereInput): Product
  content: String!
  createdAt: DateTime!
  status: Int!
  new_content: String!
  author(where: UserWhereInput): User
  comment_pics(where: CommentPictureWhereInput, orderBy: CommentPictureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentPicture!]
}

type CommentPicture implements Node {
  id: ID!
  code: Int!
  comment(where: CommentWhereInput): Comment!
  pic_url: String!
  sort_order: Int!
}

type Policy implements Node {
  id: ID!
  question: String!
  answer: String!
}

type Product implements Node {
  id: ID!
  code: Int!
  brand(where: BrandWhereInput): Brand
  category(where: SubCategoryWhereInput): SubCategory!
  attributes(where: ProductAttributeWhereInput, orderBy: ProductAttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductAttribute!]
  gallery(where: ProductGalleryWhereInput, orderBy: ProductGalleryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductGallery!]
  specs(where: ProductSpecificationWhereInput, orderBy: ProductSpecificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpecification!]
  stock(where: ProductStockWhereInput, orderBy: ProductStockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductStock!]
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  product_sn: String!
  keywords: String!
  product_brief: String!
  product_desc: String!
  product_unit: String
  primary_pic_url: String!
  list_pic_url: String!
  promotion_desc: String!
  promotion_tag: String!
  product_number: Int!
  sort_order: Int!
  sell_volume: Int!
  primary_product_id: Int
  counter_price: Float!
  extra_price: Float!
  retail_price: Float!
  unit_price: Float!
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean!
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
}

type ProductAttribute implements Node {
  id: ID!
  code: Int!
  product(where: ProductWhereInput): Product!
  parent(where: AttributeWhereInput): Attribute!
  value: String!
}

type ProductGallery implements Node {
  id: ID!
  code: Int!
  product(where: ProductWhereInput): Product!
  img_url: String!
  img_desc: String!
  sort_order: Int!
}

type ProductSpecification implements Node {
  id: ID!
  code: Int!
  parent(where: SpecificationWhereInput): Specification!
  product(where: ProductWhereInput): Product!
  value: String!
  pic_url: String
}

type ProductStock implements Node {
  id: ID!
  code: Int!
  product(where: ProductWhereInput): Product!
  type: String!
  sn: String!
  total: Int!
  retail_price: Float!
}

type Specification implements Node {
  id: ID!
  code: Int!
  name: String!
  sort_order: Int!
  product_specs(where: ProductSpecificationWhereInput, orderBy: ProductSpecificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpecification!]
}

type SubCategory implements Node {
  id: ID!
  code: Int!
  name: String!
  keywords: String!
  front_desc: String!
  sort_order: Int!
  show_index: Int!
  is_show: Boolean!
  banner_url: String!
  icon_url: String!
  img_url: String!
  wap_banner_url: String!
  level: String!
  type: Int!
  front_name: String!
  parent(where: CategoryWhereInput): Category!
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product!]
}

type Topic implements Node {
  id: ID!
  code: Int!
  title: String!
  content: String!
  avatar: String!
  item_pic_url: String!
  subtitle: String!
  topic_category(where: TopicCategoryWhereInput): TopicCategory!
  price_info: Float!
  read_count: Int!
  scene_pic_url: String!
  topic_template_id: Int!
  topic_tag_id: Int!
  sort_order: Int!
  is_show: Boolean!
}

type TopicCategory implements Node {
  id: ID!
  code: Int!
  title: String!
  pic_url: String!
  topics(where: TopicWhereInput, orderBy: TopicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Topic!]
}

type User implements Node {
  id: ID!
  code: Int!
  username: String!
  password: String!
  gender: Int!
  birthday: Int!
  createdAt: DateTime!
  last_login_time: Int!
  last_login_ip: String!
  nickname: String!
  mobile: String!
  register_ip: String!
  avatar: String!
  weixin_openid: String!
}


#
# Other Types
#

"""
A connection to a list of items.
"""
type AdConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [AdEdge]!
  aggregate: AggregateAd!
}

input AdCreateInput {
  media_type: Int
  name: String!
  link: String!
  image_url: String!
  content: String
  end_time: DateTime
  enabled: Boolean
  ad_position: AdPositionCreateOneWithoutAdsInput!
}

input AdCreateManyWithoutAd_positionInput {
  create: [AdCreateWithoutAd_positionInput!]
  connect: [AdWhereUniqueInput!]
}

input AdCreateWithoutAd_positionInput {
  media_type: Int
  name: String!
  link: String!
  image_url: String!
  content: String
  end_time: DateTime
  enabled: Boolean
}

"""
An edge in a connection.
"""
type AdEdge {
  """
  The item at the end of the edge.
  """
  node: Ad!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum AdOrderByInput {
  id_ASC
  id_DESC
  media_type_ASC
  media_type_DESC
  name_ASC
  name_DESC
  link_ASC
  link_DESC
  image_url_ASC
  image_url_DESC
  content_ASC
  content_DESC
  end_time_ASC
  end_time_DESC
  enabled_ASC
  enabled_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

"""
A connection to a list of items.
"""
type AdPositionConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [AdPositionEdge]!
  aggregate: AggregateAdPosition!
}

input AdPositionCreateInput {
  type: Int!
  name: String!
  width: Int
  height: Int
  desc: String
  ads: AdCreateManyWithoutAd_positionInput
}

input AdPositionCreateOneWithoutAdsInput {
  create: AdPositionCreateWithoutAdsInput
  connect: AdPositionWhereUniqueInput
}

input AdPositionCreateWithoutAdsInput {
  type: Int!
  name: String!
  width: Int
  height: Int
  desc: String
}

"""
An edge in a connection.
"""
type AdPositionEdge {
  """
  The item at the end of the edge.
  """
  node: AdPosition!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum AdPositionOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  width_ASC
  width_DESC
  height_ASC
  height_DESC
  desc_ASC
  desc_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type AdPositionPreviousValues {
  id: ID!
  type: Int!
  name: String!
  width: Int!
  height: Int!
  desc: String
}

type AdPositionSubscriptionPayload {
  mutation: MutationType!
  node: AdPosition
  updatedFields: [String!]
  previousValues: AdPositionPreviousValues
}

input AdPositionSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AdPositionSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AdPositionSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AdPositionWhereInput
}

input AdPositionUpdateInput {
  type: Int
  name: String
  width: Int
  height: Int
  desc: String
  ads: AdUpdateManyWithoutAd_positionInput
}

input AdPositionUpdateOneWithoutAdsInput {
  create: AdPositionCreateWithoutAdsInput
  connect: AdPositionWhereUniqueInput
  delete: Boolean
  update: AdPositionUpdateWithoutAdsDataInput
  upsert: AdPositionUpsertWithoutAdsInput
}

input AdPositionUpdateWithoutAdsDataInput {
  type: Int
  name: String
  width: Int
  height: Int
  desc: String
}

input AdPositionUpsertWithoutAdsInput {
  update: AdPositionUpdateWithoutAdsDataInput!
  create: AdPositionCreateWithoutAdsInput!
}

input AdPositionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AdPositionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AdPositionWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  type: Int
  """
  All values that are not equal to given value.
  """
  type_not: Int
  """
  All values that are contained in given list.
  """
  type_in: [Int!]
  """
  All values that are not contained in given list.
  """
  type_not_in: [Int!]
  """
  All values less than the given value.
  """
  type_lt: Int
  """
  All values less than or equal the given value.
  """
  type_lte: Int
  """
  All values greater than the given value.
  """
  type_gt: Int
  """
  All values greater than or equal the given value.
  """
  type_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  width: Int
  """
  All values that are not equal to given value.
  """
  width_not: Int
  """
  All values that are contained in given list.
  """
  width_in: [Int!]
  """
  All values that are not contained in given list.
  """
  width_not_in: [Int!]
  """
  All values less than the given value.
  """
  width_lt: Int
  """
  All values less than or equal the given value.
  """
  width_lte: Int
  """
  All values greater than the given value.
  """
  width_gt: Int
  """
  All values greater than or equal the given value.
  """
  width_gte: Int
  height: Int
  """
  All values that are not equal to given value.
  """
  height_not: Int
  """
  All values that are contained in given list.
  """
  height_in: [Int!]
  """
  All values that are not contained in given list.
  """
  height_not_in: [Int!]
  """
  All values less than the given value.
  """
  height_lt: Int
  """
  All values less than or equal the given value.
  """
  height_lte: Int
  """
  All values greater than the given value.
  """
  height_gt: Int
  """
  All values greater than or equal the given value.
  """
  height_gte: Int
  desc: String
  """
  All values that are not equal to given value.
  """
  desc_not: String
  """
  All values that are contained in given list.
  """
  desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  desc_not_in: [String!]
  """
  All values less than the given value.
  """
  desc_lt: String
  """
  All values less than or equal the given value.
  """
  desc_lte: String
  """
  All values greater than the given value.
  """
  desc_gt: String
  """
  All values greater than or equal the given value.
  """
  desc_gte: String
  """
  All values containing the given string.
  """
  desc_contains: String
  """
  All values not containing the given string.
  """
  desc_not_contains: String
  """
  All values starting with the given string.
  """
  desc_starts_with: String
  """
  All values not starting with the given string.
  """
  desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  desc_ends_with: String
  """
  All values not ending with the given string.
  """
  desc_not_ends_with: String
  ads_every: AdWhereInput
  ads_some: AdWhereInput
  ads_none: AdWhereInput
}

input AdPositionWhereUniqueInput {
  id: ID
  type: Int
}

type AdPreviousValues {
  id: ID!
  media_type: Int!
  name: String!
  link: String!
  image_url: String!
  content: String!
  end_time: DateTime
  enabled: Boolean!
}

type AdSubscriptionPayload {
  mutation: MutationType!
  node: Ad
  updatedFields: [String!]
  previousValues: AdPreviousValues
}

input AdSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AdSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AdSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AdWhereInput
}

input AdUpdateInput {
  media_type: Int
  name: String
  link: String
  image_url: String
  content: String
  end_time: DateTime
  enabled: Boolean
  ad_position: AdPositionUpdateOneWithoutAdsInput
}

input AdUpdateManyWithoutAd_positionInput {
  create: [AdCreateWithoutAd_positionInput!]
  connect: [AdWhereUniqueInput!]
  disconnect: [AdWhereUniqueInput!]
  delete: [AdWhereUniqueInput!]
  update: [AdUpdateWithWhereUniqueWithoutAd_positionInput!]
  upsert: [AdUpsertWithWhereUniqueWithoutAd_positionInput!]
}

input AdUpdateWithoutAd_positionDataInput {
  media_type: Int
  name: String
  link: String
  image_url: String
  content: String
  end_time: DateTime
  enabled: Boolean
}

input AdUpdateWithWhereUniqueWithoutAd_positionInput {
  where: AdWhereUniqueInput!
  data: AdUpdateWithoutAd_positionDataInput!
}

input AdUpsertWithWhereUniqueWithoutAd_positionInput {
  where: AdWhereUniqueInput!
  update: AdUpdateWithoutAd_positionDataInput!
  create: AdCreateWithoutAd_positionInput!
}

input AdWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AdWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AdWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  media_type: Int
  """
  All values that are not equal to given value.
  """
  media_type_not: Int
  """
  All values that are contained in given list.
  """
  media_type_in: [Int!]
  """
  All values that are not contained in given list.
  """
  media_type_not_in: [Int!]
  """
  All values less than the given value.
  """
  media_type_lt: Int
  """
  All values less than or equal the given value.
  """
  media_type_lte: Int
  """
  All values greater than the given value.
  """
  media_type_gt: Int
  """
  All values greater than or equal the given value.
  """
  media_type_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  link: String
  """
  All values that are not equal to given value.
  """
  link_not: String
  """
  All values that are contained in given list.
  """
  link_in: [String!]
  """
  All values that are not contained in given list.
  """
  link_not_in: [String!]
  """
  All values less than the given value.
  """
  link_lt: String
  """
  All values less than or equal the given value.
  """
  link_lte: String
  """
  All values greater than the given value.
  """
  link_gt: String
  """
  All values greater than or equal the given value.
  """
  link_gte: String
  """
  All values containing the given string.
  """
  link_contains: String
  """
  All values not containing the given string.
  """
  link_not_contains: String
  """
  All values starting with the given string.
  """
  link_starts_with: String
  """
  All values not starting with the given string.
  """
  link_not_starts_with: String
  """
  All values ending with the given string.
  """
  link_ends_with: String
  """
  All values not ending with the given string.
  """
  link_not_ends_with: String
  image_url: String
  """
  All values that are not equal to given value.
  """
  image_url_not: String
  """
  All values that are contained in given list.
  """
  image_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  image_url_not_in: [String!]
  """
  All values less than the given value.
  """
  image_url_lt: String
  """
  All values less than or equal the given value.
  """
  image_url_lte: String
  """
  All values greater than the given value.
  """
  image_url_gt: String
  """
  All values greater than or equal the given value.
  """
  image_url_gte: String
  """
  All values containing the given string.
  """
  image_url_contains: String
  """
  All values not containing the given string.
  """
  image_url_not_contains: String
  """
  All values starting with the given string.
  """
  image_url_starts_with: String
  """
  All values not starting with the given string.
  """
  image_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  image_url_ends_with: String
  """
  All values not ending with the given string.
  """
  image_url_not_ends_with: String
  content: String
  """
  All values that are not equal to given value.
  """
  content_not: String
  """
  All values that are contained in given list.
  """
  content_in: [String!]
  """
  All values that are not contained in given list.
  """
  content_not_in: [String!]
  """
  All values less than the given value.
  """
  content_lt: String
  """
  All values less than or equal the given value.
  """
  content_lte: String
  """
  All values greater than the given value.
  """
  content_gt: String
  """
  All values greater than or equal the given value.
  """
  content_gte: String
  """
  All values containing the given string.
  """
  content_contains: String
  """
  All values not containing the given string.
  """
  content_not_contains: String
  """
  All values starting with the given string.
  """
  content_starts_with: String
  """
  All values not starting with the given string.
  """
  content_not_starts_with: String
  """
  All values ending with the given string.
  """
  content_ends_with: String
  """
  All values not ending with the given string.
  """
  content_not_ends_with: String
  end_time: DateTime
  """
  All values that are not equal to given value.
  """
  end_time_not: DateTime
  """
  All values that are contained in given list.
  """
  end_time_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  end_time_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  end_time_lt: DateTime
  """
  All values less than or equal the given value.
  """
  end_time_lte: DateTime
  """
  All values greater than the given value.
  """
  end_time_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  end_time_gte: DateTime
  enabled: Boolean
  """
  All values that are not equal to given value.
  """
  enabled_not: Boolean
  ad_position: AdPositionWhereInput
}

input AdWhereUniqueInput {
  id: ID
}

type AggregateAd {
  count: Int!
}

type AggregateAdPosition {
  count: Int!
}

type AggregateAttribute {
  count: Int!
}

type AggregateAttributeCategory {
  count: Int!
}

type AggregateBrand {
  count: Int!
}

type AggregateCart {
  count: Int!
}

type AggregateCategory {
  count: Int!
}

type AggregateChannel {
  count: Int!
}

type AggregateComment {
  count: Int!
}

type AggregateCommentPicture {
  count: Int!
}

type AggregatePolicy {
  count: Int!
}

type AggregateProduct {
  count: Int!
}

type AggregateProductAttribute {
  count: Int!
}

type AggregateProductGallery {
  count: Int!
}

type AggregateProductSpecification {
  count: Int!
}

type AggregateProductStock {
  count: Int!
}

type AggregateSpecification {
  count: Int!
}

type AggregateSubCategory {
  count: Int!
}

type AggregateTopic {
  count: Int!
}

type AggregateTopicCategory {
  count: Int!
}

type AggregateUser {
  count: Int!
}

"""
A connection to a list of items.
"""
type AttributeCategoryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [AttributeCategoryEdge]!
  aggregate: AggregateAttributeCategory!
}

input AttributeCategoryCreateInput {
  code: Int!
  name: String!
  enabled: Boolean!
  attributes: AttributeCreateManyWithoutCategoryInput
}

input AttributeCategoryCreateOneWithoutAttributesInput {
  create: AttributeCategoryCreateWithoutAttributesInput
  connect: AttributeCategoryWhereUniqueInput
}

input AttributeCategoryCreateWithoutAttributesInput {
  code: Int!
  name: String!
  enabled: Boolean!
}

"""
An edge in a connection.
"""
type AttributeCategoryEdge {
  """
  The item at the end of the edge.
  """
  node: AttributeCategory!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum AttributeCategoryOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  enabled_ASC
  enabled_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type AttributeCategoryPreviousValues {
  id: ID!
  code: Int!
  name: String!
  enabled: Boolean!
}

type AttributeCategorySubscriptionPayload {
  mutation: MutationType!
  node: AttributeCategory
  updatedFields: [String!]
  previousValues: AttributeCategoryPreviousValues
}

input AttributeCategorySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AttributeCategorySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AttributeCategorySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AttributeCategoryWhereInput
}

input AttributeCategoryUpdateInput {
  code: Int
  name: String
  enabled: Boolean
  attributes: AttributeUpdateManyWithoutCategoryInput
}

input AttributeCategoryUpdateOneWithoutAttributesInput {
  create: AttributeCategoryCreateWithoutAttributesInput
  connect: AttributeCategoryWhereUniqueInput
  delete: Boolean
  update: AttributeCategoryUpdateWithoutAttributesDataInput
  upsert: AttributeCategoryUpsertWithoutAttributesInput
}

input AttributeCategoryUpdateWithoutAttributesDataInput {
  code: Int
  name: String
  enabled: Boolean
}

input AttributeCategoryUpsertWithoutAttributesInput {
  update: AttributeCategoryUpdateWithoutAttributesDataInput!
  create: AttributeCategoryCreateWithoutAttributesInput!
}

input AttributeCategoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AttributeCategoryWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AttributeCategoryWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  enabled: Boolean
  """
  All values that are not equal to given value.
  """
  enabled_not: Boolean
  attributes_every: AttributeWhereInput
  attributes_some: AttributeWhereInput
  attributes_none: AttributeWhereInput
}

input AttributeCategoryWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type AttributeConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [AttributeEdge]!
  aggregate: AggregateAttribute!
}

input AttributeCreateInput {
  code: Int!
  name: String!
  input_type: Int!
  values: String
  sort_order: Int
  category: AttributeCategoryCreateOneWithoutAttributesInput!
}

input AttributeCreateManyWithoutCategoryInput {
  create: [AttributeCreateWithoutCategoryInput!]
  connect: [AttributeWhereUniqueInput!]
}

input AttributeCreateOneInput {
  create: AttributeCreateInput
  connect: AttributeWhereUniqueInput
}

input AttributeCreateWithoutCategoryInput {
  code: Int!
  name: String!
  input_type: Int!
  values: String
  sort_order: Int
}

"""
An edge in a connection.
"""
type AttributeEdge {
  """
  The item at the end of the edge.
  """
  node: Attribute!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum AttributeOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  input_type_ASC
  input_type_DESC
  values_ASC
  values_DESC
  sort_order_ASC
  sort_order_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type AttributePreviousValues {
  id: ID!
  code: Int!
  name: String!
  input_type: Int!
  values: String!
  sort_order: Int!
}

type AttributeSubscriptionPayload {
  mutation: MutationType!
  node: Attribute
  updatedFields: [String!]
  previousValues: AttributePreviousValues
}

input AttributeSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AttributeSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AttributeSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AttributeWhereInput
}

input AttributeUpdateDataInput {
  code: Int
  name: String
  input_type: Int
  values: String
  sort_order: Int
  category: AttributeCategoryUpdateOneWithoutAttributesInput
}

input AttributeUpdateInput {
  code: Int
  name: String
  input_type: Int
  values: String
  sort_order: Int
  category: AttributeCategoryUpdateOneWithoutAttributesInput
}

input AttributeUpdateManyWithoutCategoryInput {
  create: [AttributeCreateWithoutCategoryInput!]
  connect: [AttributeWhereUniqueInput!]
  disconnect: [AttributeWhereUniqueInput!]
  delete: [AttributeWhereUniqueInput!]
  update: [AttributeUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [AttributeUpsertWithWhereUniqueWithoutCategoryInput!]
}

input AttributeUpdateOneInput {
  create: AttributeCreateInput
  connect: AttributeWhereUniqueInput
  delete: Boolean
  update: AttributeUpdateDataInput
  upsert: AttributeUpsertNestedInput
}

input AttributeUpdateWithoutCategoryDataInput {
  code: Int
  name: String
  input_type: Int
  values: String
  sort_order: Int
}

input AttributeUpdateWithWhereUniqueWithoutCategoryInput {
  where: AttributeWhereUniqueInput!
  data: AttributeUpdateWithoutCategoryDataInput!
}

input AttributeUpsertNestedInput {
  update: AttributeUpdateDataInput!
  create: AttributeCreateInput!
}

input AttributeUpsertWithWhereUniqueWithoutCategoryInput {
  where: AttributeWhereUniqueInput!
  update: AttributeUpdateWithoutCategoryDataInput!
  create: AttributeCreateWithoutCategoryInput!
}

input AttributeWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AttributeWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AttributeWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  input_type: Int
  """
  All values that are not equal to given value.
  """
  input_type_not: Int
  """
  All values that are contained in given list.
  """
  input_type_in: [Int!]
  """
  All values that are not contained in given list.
  """
  input_type_not_in: [Int!]
  """
  All values less than the given value.
  """
  input_type_lt: Int
  """
  All values less than or equal the given value.
  """
  input_type_lte: Int
  """
  All values greater than the given value.
  """
  input_type_gt: Int
  """
  All values greater than or equal the given value.
  """
  input_type_gte: Int
  values: String
  """
  All values that are not equal to given value.
  """
  values_not: String
  """
  All values that are contained in given list.
  """
  values_in: [String!]
  """
  All values that are not contained in given list.
  """
  values_not_in: [String!]
  """
  All values less than the given value.
  """
  values_lt: String
  """
  All values less than or equal the given value.
  """
  values_lte: String
  """
  All values greater than the given value.
  """
  values_gt: String
  """
  All values greater than or equal the given value.
  """
  values_gte: String
  """
  All values containing the given string.
  """
  values_contains: String
  """
  All values not containing the given string.
  """
  values_not_contains: String
  """
  All values starting with the given string.
  """
  values_starts_with: String
  """
  All values not starting with the given string.
  """
  values_not_starts_with: String
  """
  All values ending with the given string.
  """
  values_ends_with: String
  """
  All values not ending with the given string.
  """
  values_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  category: AttributeCategoryWhereInput
}

input AttributeWhereUniqueInput {
  id: ID
  code: Int
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
A connection to a list of items.
"""
type BrandConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [BrandEdge]!
  aggregate: AggregateBrand!
}

input BrandCreateInput {
  code: Int!
  name: String!
  list_pic_url: String
  simple_desc: String
  pic_url: String
  app_list_pic_url: String
  new_pic_url: String
  sort_order: Int
  new_sort_order: Int
  floor_price: Float
  is_show: Boolean
  is_new: Boolean
}

input BrandCreateOneInput {
  create: BrandCreateInput
  connect: BrandWhereUniqueInput
}

"""
An edge in a connection.
"""
type BrandEdge {
  """
  The item at the end of the edge.
  """
  node: Brand!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum BrandOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  list_pic_url_ASC
  list_pic_url_DESC
  simple_desc_ASC
  simple_desc_DESC
  pic_url_ASC
  pic_url_DESC
  app_list_pic_url_ASC
  app_list_pic_url_DESC
  new_pic_url_ASC
  new_pic_url_DESC
  sort_order_ASC
  sort_order_DESC
  new_sort_order_ASC
  new_sort_order_DESC
  floor_price_ASC
  floor_price_DESC
  is_show_ASC
  is_show_DESC
  is_new_ASC
  is_new_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type BrandPreviousValues {
  id: ID!
  code: Int!
  name: String!
  list_pic_url: String!
  simple_desc: String!
  pic_url: String!
  app_list_pic_url: String
  new_pic_url: String
  sort_order: Int
  new_sort_order: Int
  floor_price: Float!
  is_show: Boolean!
  is_new: Boolean
}

type BrandSubscriptionPayload {
  mutation: MutationType!
  node: Brand
  updatedFields: [String!]
  previousValues: BrandPreviousValues
}

input BrandSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [BrandSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [BrandSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BrandWhereInput
}

input BrandUpdateDataInput {
  code: Int
  name: String
  list_pic_url: String
  simple_desc: String
  pic_url: String
  app_list_pic_url: String
  new_pic_url: String
  sort_order: Int
  new_sort_order: Int
  floor_price: Float
  is_show: Boolean
  is_new: Boolean
}

input BrandUpdateInput {
  code: Int
  name: String
  list_pic_url: String
  simple_desc: String
  pic_url: String
  app_list_pic_url: String
  new_pic_url: String
  sort_order: Int
  new_sort_order: Int
  floor_price: Float
  is_show: Boolean
  is_new: Boolean
}

input BrandUpdateOneInput {
  create: BrandCreateInput
  connect: BrandWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: BrandUpdateDataInput
  upsert: BrandUpsertNestedInput
}

input BrandUpsertNestedInput {
  update: BrandUpdateDataInput!
  create: BrandCreateInput!
}

input BrandWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [BrandWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [BrandWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  list_pic_url: String
  """
  All values that are not equal to given value.
  """
  list_pic_url_not: String
  """
  All values that are contained in given list.
  """
  list_pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  list_pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  list_pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  list_pic_url_lte: String
  """
  All values greater than the given value.
  """
  list_pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  list_pic_url_gte: String
  """
  All values containing the given string.
  """
  list_pic_url_contains: String
  """
  All values not containing the given string.
  """
  list_pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  list_pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  list_pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  list_pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  list_pic_url_not_ends_with: String
  simple_desc: String
  """
  All values that are not equal to given value.
  """
  simple_desc_not: String
  """
  All values that are contained in given list.
  """
  simple_desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  simple_desc_not_in: [String!]
  """
  All values less than the given value.
  """
  simple_desc_lt: String
  """
  All values less than or equal the given value.
  """
  simple_desc_lte: String
  """
  All values greater than the given value.
  """
  simple_desc_gt: String
  """
  All values greater than or equal the given value.
  """
  simple_desc_gte: String
  """
  All values containing the given string.
  """
  simple_desc_contains: String
  """
  All values not containing the given string.
  """
  simple_desc_not_contains: String
  """
  All values starting with the given string.
  """
  simple_desc_starts_with: String
  """
  All values not starting with the given string.
  """
  simple_desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  simple_desc_ends_with: String
  """
  All values not ending with the given string.
  """
  simple_desc_not_ends_with: String
  pic_url: String
  """
  All values that are not equal to given value.
  """
  pic_url_not: String
  """
  All values that are contained in given list.
  """
  pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  pic_url_lte: String
  """
  All values greater than the given value.
  """
  pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  pic_url_gte: String
  """
  All values containing the given string.
  """
  pic_url_contains: String
  """
  All values not containing the given string.
  """
  pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  pic_url_not_ends_with: String
  app_list_pic_url: String
  """
  All values that are not equal to given value.
  """
  app_list_pic_url_not: String
  """
  All values that are contained in given list.
  """
  app_list_pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  app_list_pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  app_list_pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  app_list_pic_url_lte: String
  """
  All values greater than the given value.
  """
  app_list_pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  app_list_pic_url_gte: String
  """
  All values containing the given string.
  """
  app_list_pic_url_contains: String
  """
  All values not containing the given string.
  """
  app_list_pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  app_list_pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  app_list_pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  app_list_pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  app_list_pic_url_not_ends_with: String
  new_pic_url: String
  """
  All values that are not equal to given value.
  """
  new_pic_url_not: String
  """
  All values that are contained in given list.
  """
  new_pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  new_pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  new_pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  new_pic_url_lte: String
  """
  All values greater than the given value.
  """
  new_pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  new_pic_url_gte: String
  """
  All values containing the given string.
  """
  new_pic_url_contains: String
  """
  All values not containing the given string.
  """
  new_pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  new_pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  new_pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  new_pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  new_pic_url_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  new_sort_order: Int
  """
  All values that are not equal to given value.
  """
  new_sort_order_not: Int
  """
  All values that are contained in given list.
  """
  new_sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  new_sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  new_sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  new_sort_order_lte: Int
  """
  All values greater than the given value.
  """
  new_sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  new_sort_order_gte: Int
  floor_price: Float
  """
  All values that are not equal to given value.
  """
  floor_price_not: Float
  """
  All values that are contained in given list.
  """
  floor_price_in: [Float!]
  """
  All values that are not contained in given list.
  """
  floor_price_not_in: [Float!]
  """
  All values less than the given value.
  """
  floor_price_lt: Float
  """
  All values less than or equal the given value.
  """
  floor_price_lte: Float
  """
  All values greater than the given value.
  """
  floor_price_gt: Float
  """
  All values greater than or equal the given value.
  """
  floor_price_gte: Float
  is_show: Boolean
  """
  All values that are not equal to given value.
  """
  is_show_not: Boolean
  is_new: Boolean
  """
  All values that are not equal to given value.
  """
  is_new_not: Boolean
}

input BrandWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type CartConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CartEdge]!
  aggregate: AggregateCart!
}

input CartCreateInput {
  session_id: Int!
  count: Int!
  user: UserCreateOneInput!
  product_stock: ProductStockCreateOneInput!
}

"""
An edge in a connection.
"""
type CartEdge {
  """
  The item at the end of the edge.
  """
  node: Cart!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CartOrderByInput {
  id_ASC
  id_DESC
  session_id_ASC
  session_id_DESC
  count_ASC
  count_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CartPreviousValues {
  id: ID!
  session_id: Int!
  count: Int!
}

type CartSubscriptionPayload {
  mutation: MutationType!
  node: Cart
  updatedFields: [String!]
  previousValues: CartPreviousValues
}

input CartSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CartSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CartSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CartWhereInput
}

input CartUpdateInput {
  session_id: Int
  count: Int
  user: UserUpdateOneInput
  product_stock: ProductStockUpdateOneInput
}

input CartWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CartWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CartWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  session_id: Int
  """
  All values that are not equal to given value.
  """
  session_id_not: Int
  """
  All values that are contained in given list.
  """
  session_id_in: [Int!]
  """
  All values that are not contained in given list.
  """
  session_id_not_in: [Int!]
  """
  All values less than the given value.
  """
  session_id_lt: Int
  """
  All values less than or equal the given value.
  """
  session_id_lte: Int
  """
  All values greater than the given value.
  """
  session_id_gt: Int
  """
  All values greater than or equal the given value.
  """
  session_id_gte: Int
  count: Int
  """
  All values that are not equal to given value.
  """
  count_not: Int
  """
  All values that are contained in given list.
  """
  count_in: [Int!]
  """
  All values that are not contained in given list.
  """
  count_not_in: [Int!]
  """
  All values less than the given value.
  """
  count_lt: Int
  """
  All values less than or equal the given value.
  """
  count_lte: Int
  """
  All values greater than the given value.
  """
  count_gt: Int
  """
  All values greater than or equal the given value.
  """
  count_gte: Int
  user: UserWhereInput
  product_stock: ProductStockWhereInput
}

input CartWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type CategoryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  code: Int!
  name: String!
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  subs: SubCategoryCreateManyWithoutParentInput
}

input CategoryCreateOneWithoutSubsInput {
  create: CategoryCreateWithoutSubsInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutSubsInput {
  code: Int!
  name: String!
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
}

"""
An edge in a connection.
"""
type CategoryEdge {
  """
  The item at the end of the edge.
  """
  node: Category!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  keywords_ASC
  keywords_DESC
  front_desc_ASC
  front_desc_DESC
  sort_order_ASC
  sort_order_DESC
  show_index_ASC
  show_index_DESC
  is_show_ASC
  is_show_DESC
  banner_url_ASC
  banner_url_DESC
  icon_url_ASC
  icon_url_DESC
  img_url_ASC
  img_url_DESC
  wap_banner_url_ASC
  wap_banner_url_DESC
  level_ASC
  level_DESC
  type_ASC
  type_DESC
  front_name_ASC
  front_name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CategoryPreviousValues {
  id: ID!
  code: Int!
  name: String!
  keywords: String!
  front_desc: String!
  sort_order: Int!
  show_index: Int!
  is_show: Boolean!
  banner_url: String!
  icon_url: String!
  img_url: String!
  wap_banner_url: String!
  level: String!
  type: Int!
  front_name: String!
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CategorySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CategorySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
}

input CategoryUpdateInput {
  code: Int
  name: String
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  subs: SubCategoryUpdateManyWithoutParentInput
}

input CategoryUpdateOneWithoutSubsInput {
  create: CategoryCreateWithoutSubsInput
  connect: CategoryWhereUniqueInput
  delete: Boolean
  update: CategoryUpdateWithoutSubsDataInput
  upsert: CategoryUpsertWithoutSubsInput
}

input CategoryUpdateWithoutSubsDataInput {
  code: Int
  name: String
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
}

input CategoryUpsertWithoutSubsInput {
  update: CategoryUpdateWithoutSubsDataInput!
  create: CategoryCreateWithoutSubsInput!
}

input CategoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CategoryWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CategoryWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  keywords: String
  """
  All values that are not equal to given value.
  """
  keywords_not: String
  """
  All values that are contained in given list.
  """
  keywords_in: [String!]
  """
  All values that are not contained in given list.
  """
  keywords_not_in: [String!]
  """
  All values less than the given value.
  """
  keywords_lt: String
  """
  All values less than or equal the given value.
  """
  keywords_lte: String
  """
  All values greater than the given value.
  """
  keywords_gt: String
  """
  All values greater than or equal the given value.
  """
  keywords_gte: String
  """
  All values containing the given string.
  """
  keywords_contains: String
  """
  All values not containing the given string.
  """
  keywords_not_contains: String
  """
  All values starting with the given string.
  """
  keywords_starts_with: String
  """
  All values not starting with the given string.
  """
  keywords_not_starts_with: String
  """
  All values ending with the given string.
  """
  keywords_ends_with: String
  """
  All values not ending with the given string.
  """
  keywords_not_ends_with: String
  front_desc: String
  """
  All values that are not equal to given value.
  """
  front_desc_not: String
  """
  All values that are contained in given list.
  """
  front_desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  front_desc_not_in: [String!]
  """
  All values less than the given value.
  """
  front_desc_lt: String
  """
  All values less than or equal the given value.
  """
  front_desc_lte: String
  """
  All values greater than the given value.
  """
  front_desc_gt: String
  """
  All values greater than or equal the given value.
  """
  front_desc_gte: String
  """
  All values containing the given string.
  """
  front_desc_contains: String
  """
  All values not containing the given string.
  """
  front_desc_not_contains: String
  """
  All values starting with the given string.
  """
  front_desc_starts_with: String
  """
  All values not starting with the given string.
  """
  front_desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  front_desc_ends_with: String
  """
  All values not ending with the given string.
  """
  front_desc_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  show_index: Int
  """
  All values that are not equal to given value.
  """
  show_index_not: Int
  """
  All values that are contained in given list.
  """
  show_index_in: [Int!]
  """
  All values that are not contained in given list.
  """
  show_index_not_in: [Int!]
  """
  All values less than the given value.
  """
  show_index_lt: Int
  """
  All values less than or equal the given value.
  """
  show_index_lte: Int
  """
  All values greater than the given value.
  """
  show_index_gt: Int
  """
  All values greater than or equal the given value.
  """
  show_index_gte: Int
  is_show: Boolean
  """
  All values that are not equal to given value.
  """
  is_show_not: Boolean
  banner_url: String
  """
  All values that are not equal to given value.
  """
  banner_url_not: String
  """
  All values that are contained in given list.
  """
  banner_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  banner_url_not_in: [String!]
  """
  All values less than the given value.
  """
  banner_url_lt: String
  """
  All values less than or equal the given value.
  """
  banner_url_lte: String
  """
  All values greater than the given value.
  """
  banner_url_gt: String
  """
  All values greater than or equal the given value.
  """
  banner_url_gte: String
  """
  All values containing the given string.
  """
  banner_url_contains: String
  """
  All values not containing the given string.
  """
  banner_url_not_contains: String
  """
  All values starting with the given string.
  """
  banner_url_starts_with: String
  """
  All values not starting with the given string.
  """
  banner_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  banner_url_ends_with: String
  """
  All values not ending with the given string.
  """
  banner_url_not_ends_with: String
  icon_url: String
  """
  All values that are not equal to given value.
  """
  icon_url_not: String
  """
  All values that are contained in given list.
  """
  icon_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  icon_url_not_in: [String!]
  """
  All values less than the given value.
  """
  icon_url_lt: String
  """
  All values less than or equal the given value.
  """
  icon_url_lte: String
  """
  All values greater than the given value.
  """
  icon_url_gt: String
  """
  All values greater than or equal the given value.
  """
  icon_url_gte: String
  """
  All values containing the given string.
  """
  icon_url_contains: String
  """
  All values not containing the given string.
  """
  icon_url_not_contains: String
  """
  All values starting with the given string.
  """
  icon_url_starts_with: String
  """
  All values not starting with the given string.
  """
  icon_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  icon_url_ends_with: String
  """
  All values not ending with the given string.
  """
  icon_url_not_ends_with: String
  img_url: String
  """
  All values that are not equal to given value.
  """
  img_url_not: String
  """
  All values that are contained in given list.
  """
  img_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  img_url_not_in: [String!]
  """
  All values less than the given value.
  """
  img_url_lt: String
  """
  All values less than or equal the given value.
  """
  img_url_lte: String
  """
  All values greater than the given value.
  """
  img_url_gt: String
  """
  All values greater than or equal the given value.
  """
  img_url_gte: String
  """
  All values containing the given string.
  """
  img_url_contains: String
  """
  All values not containing the given string.
  """
  img_url_not_contains: String
  """
  All values starting with the given string.
  """
  img_url_starts_with: String
  """
  All values not starting with the given string.
  """
  img_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  img_url_ends_with: String
  """
  All values not ending with the given string.
  """
  img_url_not_ends_with: String
  wap_banner_url: String
  """
  All values that are not equal to given value.
  """
  wap_banner_url_not: String
  """
  All values that are contained in given list.
  """
  wap_banner_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  wap_banner_url_not_in: [String!]
  """
  All values less than the given value.
  """
  wap_banner_url_lt: String
  """
  All values less than or equal the given value.
  """
  wap_banner_url_lte: String
  """
  All values greater than the given value.
  """
  wap_banner_url_gt: String
  """
  All values greater than or equal the given value.
  """
  wap_banner_url_gte: String
  """
  All values containing the given string.
  """
  wap_banner_url_contains: String
  """
  All values not containing the given string.
  """
  wap_banner_url_not_contains: String
  """
  All values starting with the given string.
  """
  wap_banner_url_starts_with: String
  """
  All values not starting with the given string.
  """
  wap_banner_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  wap_banner_url_ends_with: String
  """
  All values not ending with the given string.
  """
  wap_banner_url_not_ends_with: String
  level: String
  """
  All values that are not equal to given value.
  """
  level_not: String
  """
  All values that are contained in given list.
  """
  level_in: [String!]
  """
  All values that are not contained in given list.
  """
  level_not_in: [String!]
  """
  All values less than the given value.
  """
  level_lt: String
  """
  All values less than or equal the given value.
  """
  level_lte: String
  """
  All values greater than the given value.
  """
  level_gt: String
  """
  All values greater than or equal the given value.
  """
  level_gte: String
  """
  All values containing the given string.
  """
  level_contains: String
  """
  All values not containing the given string.
  """
  level_not_contains: String
  """
  All values starting with the given string.
  """
  level_starts_with: String
  """
  All values not starting with the given string.
  """
  level_not_starts_with: String
  """
  All values ending with the given string.
  """
  level_ends_with: String
  """
  All values not ending with the given string.
  """
  level_not_ends_with: String
  type: Int
  """
  All values that are not equal to given value.
  """
  type_not: Int
  """
  All values that are contained in given list.
  """
  type_in: [Int!]
  """
  All values that are not contained in given list.
  """
  type_not_in: [Int!]
  """
  All values less than the given value.
  """
  type_lt: Int
  """
  All values less than or equal the given value.
  """
  type_lte: Int
  """
  All values greater than the given value.
  """
  type_gt: Int
  """
  All values greater than or equal the given value.
  """
  type_gte: Int
  front_name: String
  """
  All values that are not equal to given value.
  """
  front_name_not: String
  """
  All values that are contained in given list.
  """
  front_name_in: [String!]
  """
  All values that are not contained in given list.
  """
  front_name_not_in: [String!]
  """
  All values less than the given value.
  """
  front_name_lt: String
  """
  All values less than or equal the given value.
  """
  front_name_lte: String
  """
  All values greater than the given value.
  """
  front_name_gt: String
  """
  All values greater than or equal the given value.
  """
  front_name_gte: String
  """
  All values containing the given string.
  """
  front_name_contains: String
  """
  All values not containing the given string.
  """
  front_name_not_contains: String
  """
  All values starting with the given string.
  """
  front_name_starts_with: String
  """
  All values not starting with the given string.
  """
  front_name_not_starts_with: String
  """
  All values ending with the given string.
  """
  front_name_ends_with: String
  """
  All values not ending with the given string.
  """
  front_name_not_ends_with: String
  subs_every: SubCategoryWhereInput
  subs_some: SubCategoryWhereInput
  subs_none: SubCategoryWhereInput
}

input CategoryWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type ChannelConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ChannelEdge]!
  aggregate: AggregateChannel!
}

input ChannelCreateInput {
  name: String!
  url: String!
  icon_url: String!
  sort_order: Int!
}

"""
An edge in a connection.
"""
type ChannelEdge {
  """
  The item at the end of the edge.
  """
  node: Channel!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ChannelOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  url_ASC
  url_DESC
  icon_url_ASC
  icon_url_DESC
  sort_order_ASC
  sort_order_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ChannelPreviousValues {
  id: ID!
  name: String!
  url: String!
  icon_url: String!
  sort_order: Int!
}

type ChannelSubscriptionPayload {
  mutation: MutationType!
  node: Channel
  updatedFields: [String!]
  previousValues: ChannelPreviousValues
}

input ChannelSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ChannelSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ChannelSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ChannelWhereInput
}

input ChannelUpdateInput {
  name: String
  url: String
  icon_url: String
  sort_order: Int
}

input ChannelWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ChannelWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ChannelWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  url: String
  """
  All values that are not equal to given value.
  """
  url_not: String
  """
  All values that are contained in given list.
  """
  url_in: [String!]
  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]
  """
  All values less than the given value.
  """
  url_lt: String
  """
  All values less than or equal the given value.
  """
  url_lte: String
  """
  All values greater than the given value.
  """
  url_gt: String
  """
  All values greater than or equal the given value.
  """
  url_gte: String
  """
  All values containing the given string.
  """
  url_contains: String
  """
  All values not containing the given string.
  """
  url_not_contains: String
  """
  All values starting with the given string.
  """
  url_starts_with: String
  """
  All values not starting with the given string.
  """
  url_not_starts_with: String
  """
  All values ending with the given string.
  """
  url_ends_with: String
  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  icon_url: String
  """
  All values that are not equal to given value.
  """
  icon_url_not: String
  """
  All values that are contained in given list.
  """
  icon_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  icon_url_not_in: [String!]
  """
  All values less than the given value.
  """
  icon_url_lt: String
  """
  All values less than or equal the given value.
  """
  icon_url_lte: String
  """
  All values greater than the given value.
  """
  icon_url_gt: String
  """
  All values greater than or equal the given value.
  """
  icon_url_gte: String
  """
  All values containing the given string.
  """
  icon_url_contains: String
  """
  All values not containing the given string.
  """
  icon_url_not_contains: String
  """
  All values starting with the given string.
  """
  icon_url_starts_with: String
  """
  All values not starting with the given string.
  """
  icon_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  icon_url_ends_with: String
  """
  All values not ending with the given string.
  """
  icon_url_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
}

input ChannelWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type CommentConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CommentEdge]!
  aggregate: AggregateComment!
}

input CommentCreateInput {
  code: Int!
  type_id: Int!
  content: String!
  status: Int!
  new_content: String!
  product: ProductCreateOneWithoutCommentsInput
  author: UserCreateOneInput
  comment_pics: CommentPictureCreateManyWithoutCommentInput
}

input CommentCreateManyWithoutProductInput {
  create: [CommentCreateWithoutProductInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateOneWithoutComment_picsInput {
  create: CommentCreateWithoutComment_picsInput
  connect: CommentWhereUniqueInput
}

input CommentCreateWithoutComment_picsInput {
  code: Int!
  type_id: Int!
  content: String!
  status: Int!
  new_content: String!
  product: ProductCreateOneWithoutCommentsInput
  author: UserCreateOneInput
}

input CommentCreateWithoutProductInput {
  code: Int!
  type_id: Int!
  content: String!
  status: Int!
  new_content: String!
  author: UserCreateOneInput
  comment_pics: CommentPictureCreateManyWithoutCommentInput
}

"""
An edge in a connection.
"""
type CommentEdge {
  """
  The item at the end of the edge.
  """
  node: Comment!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CommentOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  type_id_ASC
  type_id_DESC
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  status_ASC
  status_DESC
  new_content_ASC
  new_content_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
A connection to a list of items.
"""
type CommentPictureConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CommentPictureEdge]!
  aggregate: AggregateCommentPicture!
}

input CommentPictureCreateInput {
  code: Int!
  pic_url: String!
  sort_order: Int!
  comment: CommentCreateOneWithoutComment_picsInput!
}

input CommentPictureCreateManyWithoutCommentInput {
  create: [CommentPictureCreateWithoutCommentInput!]
  connect: [CommentPictureWhereUniqueInput!]
}

input CommentPictureCreateWithoutCommentInput {
  code: Int!
  pic_url: String!
  sort_order: Int!
}

"""
An edge in a connection.
"""
type CommentPictureEdge {
  """
  The item at the end of the edge.
  """
  node: CommentPicture!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CommentPictureOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  pic_url_ASC
  pic_url_DESC
  sort_order_ASC
  sort_order_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CommentPicturePreviousValues {
  id: ID!
  code: Int!
  pic_url: String!
  sort_order: Int!
}

type CommentPictureSubscriptionPayload {
  mutation: MutationType!
  node: CommentPicture
  updatedFields: [String!]
  previousValues: CommentPicturePreviousValues
}

input CommentPictureSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CommentPictureSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CommentPictureSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentPictureWhereInput
}

input CommentPictureUpdateInput {
  code: Int
  pic_url: String
  sort_order: Int
  comment: CommentUpdateOneWithoutComment_picsInput
}

input CommentPictureUpdateManyWithoutCommentInput {
  create: [CommentPictureCreateWithoutCommentInput!]
  connect: [CommentPictureWhereUniqueInput!]
  disconnect: [CommentPictureWhereUniqueInput!]
  delete: [CommentPictureWhereUniqueInput!]
  update: [CommentPictureUpdateWithWhereUniqueWithoutCommentInput!]
  upsert: [CommentPictureUpsertWithWhereUniqueWithoutCommentInput!]
}

input CommentPictureUpdateWithoutCommentDataInput {
  code: Int
  pic_url: String
  sort_order: Int
}

input CommentPictureUpdateWithWhereUniqueWithoutCommentInput {
  where: CommentPictureWhereUniqueInput!
  data: CommentPictureUpdateWithoutCommentDataInput!
}

input CommentPictureUpsertWithWhereUniqueWithoutCommentInput {
  where: CommentPictureWhereUniqueInput!
  update: CommentPictureUpdateWithoutCommentDataInput!
  create: CommentPictureCreateWithoutCommentInput!
}

input CommentPictureWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CommentPictureWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CommentPictureWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  pic_url: String
  """
  All values that are not equal to given value.
  """
  pic_url_not: String
  """
  All values that are contained in given list.
  """
  pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  pic_url_lte: String
  """
  All values greater than the given value.
  """
  pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  pic_url_gte: String
  """
  All values containing the given string.
  """
  pic_url_contains: String
  """
  All values not containing the given string.
  """
  pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  pic_url_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  comment: CommentWhereInput
}

input CommentPictureWhereUniqueInput {
  id: ID
  code: Int
}

type CommentPreviousValues {
  id: ID!
  code: Int!
  type_id: Int!
  content: String!
  createdAt: DateTime!
  status: Int!
  new_content: String!
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
  updatedFields: [String!]
  previousValues: CommentPreviousValues
}

input CommentSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CommentSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CommentSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentWhereInput
}

input CommentUpdateInput {
  code: Int
  type_id: Int
  content: String
  status: Int
  new_content: String
  product: ProductUpdateOneWithoutCommentsInput
  author: UserUpdateOneInput
  comment_pics: CommentPictureUpdateManyWithoutCommentInput
}

input CommentUpdateManyWithoutProductInput {
  create: [CommentCreateWithoutProductInput!]
  connect: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutProductInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutProductInput!]
}

input CommentUpdateOneWithoutComment_picsInput {
  create: CommentCreateWithoutComment_picsInput
  connect: CommentWhereUniqueInput
  delete: Boolean
  update: CommentUpdateWithoutComment_picsDataInput
  upsert: CommentUpsertWithoutComment_picsInput
}

input CommentUpdateWithoutComment_picsDataInput {
  code: Int
  type_id: Int
  content: String
  status: Int
  new_content: String
  product: ProductUpdateOneWithoutCommentsInput
  author: UserUpdateOneInput
}

input CommentUpdateWithoutProductDataInput {
  code: Int
  type_id: Int
  content: String
  status: Int
  new_content: String
  author: UserUpdateOneInput
  comment_pics: CommentPictureUpdateManyWithoutCommentInput
}

input CommentUpdateWithWhereUniqueWithoutProductInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutProductDataInput!
}

input CommentUpsertWithoutComment_picsInput {
  update: CommentUpdateWithoutComment_picsDataInput!
  create: CommentCreateWithoutComment_picsInput!
}

input CommentUpsertWithWhereUniqueWithoutProductInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutProductDataInput!
  create: CommentCreateWithoutProductInput!
}

input CommentWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CommentWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CommentWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  type_id: Int
  """
  All values that are not equal to given value.
  """
  type_id_not: Int
  """
  All values that are contained in given list.
  """
  type_id_in: [Int!]
  """
  All values that are not contained in given list.
  """
  type_id_not_in: [Int!]
  """
  All values less than the given value.
  """
  type_id_lt: Int
  """
  All values less than or equal the given value.
  """
  type_id_lte: Int
  """
  All values greater than the given value.
  """
  type_id_gt: Int
  """
  All values greater than or equal the given value.
  """
  type_id_gte: Int
  content: String
  """
  All values that are not equal to given value.
  """
  content_not: String
  """
  All values that are contained in given list.
  """
  content_in: [String!]
  """
  All values that are not contained in given list.
  """
  content_not_in: [String!]
  """
  All values less than the given value.
  """
  content_lt: String
  """
  All values less than or equal the given value.
  """
  content_lte: String
  """
  All values greater than the given value.
  """
  content_gt: String
  """
  All values greater than or equal the given value.
  """
  content_gte: String
  """
  All values containing the given string.
  """
  content_contains: String
  """
  All values not containing the given string.
  """
  content_not_contains: String
  """
  All values starting with the given string.
  """
  content_starts_with: String
  """
  All values not starting with the given string.
  """
  content_not_starts_with: String
  """
  All values ending with the given string.
  """
  content_ends_with: String
  """
  All values not ending with the given string.
  """
  content_not_ends_with: String
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  status: Int
  """
  All values that are not equal to given value.
  """
  status_not: Int
  """
  All values that are contained in given list.
  """
  status_in: [Int!]
  """
  All values that are not contained in given list.
  """
  status_not_in: [Int!]
  """
  All values less than the given value.
  """
  status_lt: Int
  """
  All values less than or equal the given value.
  """
  status_lte: Int
  """
  All values greater than the given value.
  """
  status_gt: Int
  """
  All values greater than or equal the given value.
  """
  status_gte: Int
  new_content: String
  """
  All values that are not equal to given value.
  """
  new_content_not: String
  """
  All values that are contained in given list.
  """
  new_content_in: [String!]
  """
  All values that are not contained in given list.
  """
  new_content_not_in: [String!]
  """
  All values less than the given value.
  """
  new_content_lt: String
  """
  All values less than or equal the given value.
  """
  new_content_lte: String
  """
  All values greater than the given value.
  """
  new_content_gt: String
  """
  All values greater than or equal the given value.
  """
  new_content_gte: String
  """
  All values containing the given string.
  """
  new_content_contains: String
  """
  All values not containing the given string.
  """
  new_content_not_contains: String
  """
  All values starting with the given string.
  """
  new_content_starts_with: String
  """
  All values not starting with the given string.
  """
  new_content_not_starts_with: String
  """
  All values ending with the given string.
  """
  new_content_ends_with: String
  """
  All values not ending with the given string.
  """
  new_content_not_ends_with: String
  product: ProductWhereInput
  author: UserWhereInput
  comment_pics_every: CommentPictureWhereInput
  comment_pics_some: CommentPictureWhereInput
  comment_pics_none: CommentPictureWhereInput
}

input CommentWhereUniqueInput {
  id: ID
  code: Int
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createBrand(data: BrandCreateInput!): Brand!
  createCategory(data: CategoryCreateInput!): Category!
  createSubCategory(data: SubCategoryCreateInput!): SubCategory!
  createProduct(data: ProductCreateInput!): Product!
  createProductAttribute(data: ProductAttributeCreateInput!): ProductAttribute!
  createProductGallery(data: ProductGalleryCreateInput!): ProductGallery!
  createProductStock(data: ProductStockCreateInput!): ProductStock!
  createChannel(data: ChannelCreateInput!): Channel!
  createAd(data: AdCreateInput!): Ad!
  createAdPosition(data: AdPositionCreateInput!): AdPosition!
  createTopic(data: TopicCreateInput!): Topic!
  createTopicCategory(data: TopicCategoryCreateInput!): TopicCategory!
  createUser(data: UserCreateInput!): User!
  createComment(data: CommentCreateInput!): Comment!
  createCommentPicture(data: CommentPictureCreateInput!): CommentPicture!
  createPolicy(data: PolicyCreateInput!): Policy!
  createAttribute(data: AttributeCreateInput!): Attribute!
  createAttributeCategory(data: AttributeCategoryCreateInput!): AttributeCategory!
  createSpecification(data: SpecificationCreateInput!): Specification!
  createProductSpecification(data: ProductSpecificationCreateInput!): ProductSpecification!
  createCart(data: CartCreateInput!): Cart!
  updateBrand(data: BrandUpdateInput!, where: BrandWhereUniqueInput!): Brand
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateSubCategory(data: SubCategoryUpdateInput!, where: SubCategoryWhereUniqueInput!): SubCategory
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateProductAttribute(data: ProductAttributeUpdateInput!, where: ProductAttributeWhereUniqueInput!): ProductAttribute
  updateProductGallery(data: ProductGalleryUpdateInput!, where: ProductGalleryWhereUniqueInput!): ProductGallery
  updateProductStock(data: ProductStockUpdateInput!, where: ProductStockWhereUniqueInput!): ProductStock
  updateChannel(data: ChannelUpdateInput!, where: ChannelWhereUniqueInput!): Channel
  updateAd(data: AdUpdateInput!, where: AdWhereUniqueInput!): Ad
  updateAdPosition(data: AdPositionUpdateInput!, where: AdPositionWhereUniqueInput!): AdPosition
  updateTopic(data: TopicUpdateInput!, where: TopicWhereUniqueInput!): Topic
  updateTopicCategory(data: TopicCategoryUpdateInput!, where: TopicCategoryWhereUniqueInput!): TopicCategory
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateCommentPicture(data: CommentPictureUpdateInput!, where: CommentPictureWhereUniqueInput!): CommentPicture
  updatePolicy(data: PolicyUpdateInput!, where: PolicyWhereUniqueInput!): Policy
  updateAttribute(data: AttributeUpdateInput!, where: AttributeWhereUniqueInput!): Attribute
  updateAttributeCategory(data: AttributeCategoryUpdateInput!, where: AttributeCategoryWhereUniqueInput!): AttributeCategory
  updateSpecification(data: SpecificationUpdateInput!, where: SpecificationWhereUniqueInput!): Specification
  updateProductSpecification(data: ProductSpecificationUpdateInput!, where: ProductSpecificationWhereUniqueInput!): ProductSpecification
  updateCart(data: CartUpdateInput!, where: CartWhereUniqueInput!): Cart
  deleteBrand(where: BrandWhereUniqueInput!): Brand
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteSubCategory(where: SubCategoryWhereUniqueInput!): SubCategory
  deleteProduct(where: ProductWhereUniqueInput!): Product
  deleteProductAttribute(where: ProductAttributeWhereUniqueInput!): ProductAttribute
  deleteProductGallery(where: ProductGalleryWhereUniqueInput!): ProductGallery
  deleteProductStock(where: ProductStockWhereUniqueInput!): ProductStock
  deleteChannel(where: ChannelWhereUniqueInput!): Channel
  deleteAd(where: AdWhereUniqueInput!): Ad
  deleteAdPosition(where: AdPositionWhereUniqueInput!): AdPosition
  deleteTopic(where: TopicWhereUniqueInput!): Topic
  deleteTopicCategory(where: TopicCategoryWhereUniqueInput!): TopicCategory
  deleteUser(where: UserWhereUniqueInput!): User
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteCommentPicture(where: CommentPictureWhereUniqueInput!): CommentPicture
  deletePolicy(where: PolicyWhereUniqueInput!): Policy
  deleteAttribute(where: AttributeWhereUniqueInput!): Attribute
  deleteAttributeCategory(where: AttributeCategoryWhereUniqueInput!): AttributeCategory
  deleteSpecification(where: SpecificationWhereUniqueInput!): Specification
  deleteProductSpecification(where: ProductSpecificationWhereUniqueInput!): ProductSpecification
  deleteCart(where: CartWhereUniqueInput!): Cart
  upsertBrand(where: BrandWhereUniqueInput!, create: BrandCreateInput!, update: BrandUpdateInput!): Brand!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  upsertSubCategory(where: SubCategoryWhereUniqueInput!, create: SubCategoryCreateInput!, update: SubCategoryUpdateInput!): SubCategory!
  upsertProduct(where: ProductWhereUniqueInput!, create: ProductCreateInput!, update: ProductUpdateInput!): Product!
  upsertProductAttribute(where: ProductAttributeWhereUniqueInput!, create: ProductAttributeCreateInput!, update: ProductAttributeUpdateInput!): ProductAttribute!
  upsertProductGallery(where: ProductGalleryWhereUniqueInput!, create: ProductGalleryCreateInput!, update: ProductGalleryUpdateInput!): ProductGallery!
  upsertProductStock(where: ProductStockWhereUniqueInput!, create: ProductStockCreateInput!, update: ProductStockUpdateInput!): ProductStock!
  upsertChannel(where: ChannelWhereUniqueInput!, create: ChannelCreateInput!, update: ChannelUpdateInput!): Channel!
  upsertAd(where: AdWhereUniqueInput!, create: AdCreateInput!, update: AdUpdateInput!): Ad!
  upsertAdPosition(where: AdPositionWhereUniqueInput!, create: AdPositionCreateInput!, update: AdPositionUpdateInput!): AdPosition!
  upsertTopic(where: TopicWhereUniqueInput!, create: TopicCreateInput!, update: TopicUpdateInput!): Topic!
  upsertTopicCategory(where: TopicCategoryWhereUniqueInput!, create: TopicCategoryCreateInput!, update: TopicCategoryUpdateInput!): TopicCategory!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertComment(where: CommentWhereUniqueInput!, create: CommentCreateInput!, update: CommentUpdateInput!): Comment!
  upsertCommentPicture(where: CommentPictureWhereUniqueInput!, create: CommentPictureCreateInput!, update: CommentPictureUpdateInput!): CommentPicture!
  upsertPolicy(where: PolicyWhereUniqueInput!, create: PolicyCreateInput!, update: PolicyUpdateInput!): Policy!
  upsertAttribute(where: AttributeWhereUniqueInput!, create: AttributeCreateInput!, update: AttributeUpdateInput!): Attribute!
  upsertAttributeCategory(where: AttributeCategoryWhereUniqueInput!, create: AttributeCategoryCreateInput!, update: AttributeCategoryUpdateInput!): AttributeCategory!
  upsertSpecification(where: SpecificationWhereUniqueInput!, create: SpecificationCreateInput!, update: SpecificationUpdateInput!): Specification!
  upsertProductSpecification(where: ProductSpecificationWhereUniqueInput!, create: ProductSpecificationCreateInput!, update: ProductSpecificationUpdateInput!): ProductSpecification!
  upsertCart(where: CartWhereUniqueInput!, create: CartCreateInput!, update: CartUpdateInput!): Cart!
  updateManyBrands(data: BrandUpdateInput!, where: BrandWhereInput): BatchPayload!
  updateManyCategories(data: CategoryUpdateInput!, where: CategoryWhereInput): BatchPayload!
  updateManySubCategories(data: SubCategoryUpdateInput!, where: SubCategoryWhereInput): BatchPayload!
  updateManyProducts(data: ProductUpdateInput!, where: ProductWhereInput): BatchPayload!
  updateManyProductAttributes(data: ProductAttributeUpdateInput!, where: ProductAttributeWhereInput): BatchPayload!
  updateManyProductGalleries(data: ProductGalleryUpdateInput!, where: ProductGalleryWhereInput): BatchPayload!
  updateManyProductStocks(data: ProductStockUpdateInput!, where: ProductStockWhereInput): BatchPayload!
  updateManyChannels(data: ChannelUpdateInput!, where: ChannelWhereInput): BatchPayload!
  updateManyAds(data: AdUpdateInput!, where: AdWhereInput): BatchPayload!
  updateManyAdPositions(data: AdPositionUpdateInput!, where: AdPositionWhereInput): BatchPayload!
  updateManyTopics(data: TopicUpdateInput!, where: TopicWhereInput): BatchPayload!
  updateManyTopicCategories(data: TopicCategoryUpdateInput!, where: TopicCategoryWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  updateManyComments(data: CommentUpdateInput!, where: CommentWhereInput): BatchPayload!
  updateManyCommentPictures(data: CommentPictureUpdateInput!, where: CommentPictureWhereInput): BatchPayload!
  updateManyPolicies(data: PolicyUpdateInput!, where: PolicyWhereInput): BatchPayload!
  updateManyAttributes(data: AttributeUpdateInput!, where: AttributeWhereInput): BatchPayload!
  updateManyAttributeCategories(data: AttributeCategoryUpdateInput!, where: AttributeCategoryWhereInput): BatchPayload!
  updateManySpecifications(data: SpecificationUpdateInput!, where: SpecificationWhereInput): BatchPayload!
  updateManyProductSpecifications(data: ProductSpecificationUpdateInput!, where: ProductSpecificationWhereInput): BatchPayload!
  updateManyCarts(data: CartUpdateInput!, where: CartWhereInput): BatchPayload!
  deleteManyBrands(where: BrandWhereInput): BatchPayload!
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  deleteManySubCategories(where: SubCategoryWhereInput): BatchPayload!
  deleteManyProducts(where: ProductWhereInput): BatchPayload!
  deleteManyProductAttributes(where: ProductAttributeWhereInput): BatchPayload!
  deleteManyProductGalleries(where: ProductGalleryWhereInput): BatchPayload!
  deleteManyProductStocks(where: ProductStockWhereInput): BatchPayload!
  deleteManyChannels(where: ChannelWhereInput): BatchPayload!
  deleteManyAds(where: AdWhereInput): BatchPayload!
  deleteManyAdPositions(where: AdPositionWhereInput): BatchPayload!
  deleteManyTopics(where: TopicWhereInput): BatchPayload!
  deleteManyTopicCategories(where: TopicCategoryWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  deleteManyCommentPictures(where: CommentPictureWhereInput): BatchPayload!
  deleteManyPolicies(where: PolicyWhereInput): BatchPayload!
  deleteManyAttributes(where: AttributeWhereInput): BatchPayload!
  deleteManyAttributeCategories(where: AttributeCategoryWhereInput): BatchPayload!
  deleteManySpecifications(where: SpecificationWhereInput): BatchPayload!
  deleteManyProductSpecifications(where: ProductSpecificationWhereInput): BatchPayload!
  deleteManyCarts(where: CartWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A connection to a list of items.
"""
type PolicyConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PolicyEdge]!
  aggregate: AggregatePolicy!
}

input PolicyCreateInput {
  question: String!
  answer: String!
}

"""
An edge in a connection.
"""
type PolicyEdge {
  """
  The item at the end of the edge.
  """
  node: Policy!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PolicyOrderByInput {
  id_ASC
  id_DESC
  question_ASC
  question_DESC
  answer_ASC
  answer_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PolicyPreviousValues {
  id: ID!
  question: String!
  answer: String!
}

type PolicySubscriptionPayload {
  mutation: MutationType!
  node: Policy
  updatedFields: [String!]
  previousValues: PolicyPreviousValues
}

input PolicySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PolicySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PolicySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PolicyWhereInput
}

input PolicyUpdateInput {
  question: String
  answer: String
}

input PolicyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PolicyWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PolicyWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  question: String
  """
  All values that are not equal to given value.
  """
  question_not: String
  """
  All values that are contained in given list.
  """
  question_in: [String!]
  """
  All values that are not contained in given list.
  """
  question_not_in: [String!]
  """
  All values less than the given value.
  """
  question_lt: String
  """
  All values less than or equal the given value.
  """
  question_lte: String
  """
  All values greater than the given value.
  """
  question_gt: String
  """
  All values greater than or equal the given value.
  """
  question_gte: String
  """
  All values containing the given string.
  """
  question_contains: String
  """
  All values not containing the given string.
  """
  question_not_contains: String
  """
  All values starting with the given string.
  """
  question_starts_with: String
  """
  All values not starting with the given string.
  """
  question_not_starts_with: String
  """
  All values ending with the given string.
  """
  question_ends_with: String
  """
  All values not ending with the given string.
  """
  question_not_ends_with: String
  answer: String
  """
  All values that are not equal to given value.
  """
  answer_not: String
  """
  All values that are contained in given list.
  """
  answer_in: [String!]
  """
  All values that are not contained in given list.
  """
  answer_not_in: [String!]
  """
  All values less than the given value.
  """
  answer_lt: String
  """
  All values less than or equal the given value.
  """
  answer_lte: String
  """
  All values greater than the given value.
  """
  answer_gt: String
  """
  All values greater than or equal the given value.
  """
  answer_gte: String
  """
  All values containing the given string.
  """
  answer_contains: String
  """
  All values not containing the given string.
  """
  answer_not_contains: String
  """
  All values starting with the given string.
  """
  answer_starts_with: String
  """
  All values not starting with the given string.
  """
  answer_not_starts_with: String
  """
  All values ending with the given string.
  """
  answer_ends_with: String
  """
  All values not ending with the given string.
  """
  answer_not_ends_with: String
}

input PolicyWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type ProductAttributeConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ProductAttributeEdge]!
  aggregate: AggregateProductAttribute!
}

input ProductAttributeCreateInput {
  code: Int!
  value: String!
  product: ProductCreateOneWithoutAttributesInput!
  parent: AttributeCreateOneInput!
}

input ProductAttributeCreateManyWithoutProductInput {
  create: [ProductAttributeCreateWithoutProductInput!]
  connect: [ProductAttributeWhereUniqueInput!]
}

input ProductAttributeCreateWithoutProductInput {
  code: Int!
  value: String!
  parent: AttributeCreateOneInput!
}

"""
An edge in a connection.
"""
type ProductAttributeEdge {
  """
  The item at the end of the edge.
  """
  node: ProductAttribute!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ProductAttributeOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  value_ASC
  value_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ProductAttributePreviousValues {
  id: ID!
  code: Int!
  value: String!
}

type ProductAttributeSubscriptionPayload {
  mutation: MutationType!
  node: ProductAttribute
  updatedFields: [String!]
  previousValues: ProductAttributePreviousValues
}

input ProductAttributeSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductAttributeSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductAttributeSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProductAttributeWhereInput
}

input ProductAttributeUpdateInput {
  code: Int
  value: String
  product: ProductUpdateOneWithoutAttributesInput
  parent: AttributeUpdateOneInput
}

input ProductAttributeUpdateManyWithoutProductInput {
  create: [ProductAttributeCreateWithoutProductInput!]
  connect: [ProductAttributeWhereUniqueInput!]
  disconnect: [ProductAttributeWhereUniqueInput!]
  delete: [ProductAttributeWhereUniqueInput!]
  update: [ProductAttributeUpdateWithWhereUniqueWithoutProductInput!]
  upsert: [ProductAttributeUpsertWithWhereUniqueWithoutProductInput!]
}

input ProductAttributeUpdateWithoutProductDataInput {
  code: Int
  value: String
  parent: AttributeUpdateOneInput
}

input ProductAttributeUpdateWithWhereUniqueWithoutProductInput {
  where: ProductAttributeWhereUniqueInput!
  data: ProductAttributeUpdateWithoutProductDataInput!
}

input ProductAttributeUpsertWithWhereUniqueWithoutProductInput {
  where: ProductAttributeWhereUniqueInput!
  update: ProductAttributeUpdateWithoutProductDataInput!
  create: ProductAttributeCreateWithoutProductInput!
}

input ProductAttributeWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductAttributeWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductAttributeWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  value: String
  """
  All values that are not equal to given value.
  """
  value_not: String
  """
  All values that are contained in given list.
  """
  value_in: [String!]
  """
  All values that are not contained in given list.
  """
  value_not_in: [String!]
  """
  All values less than the given value.
  """
  value_lt: String
  """
  All values less than or equal the given value.
  """
  value_lte: String
  """
  All values greater than the given value.
  """
  value_gt: String
  """
  All values greater than or equal the given value.
  """
  value_gte: String
  """
  All values containing the given string.
  """
  value_contains: String
  """
  All values not containing the given string.
  """
  value_not_contains: String
  """
  All values starting with the given string.
  """
  value_starts_with: String
  """
  All values not starting with the given string.
  """
  value_not_starts_with: String
  """
  All values ending with the given string.
  """
  value_ends_with: String
  """
  All values not ending with the given string.
  """
  value_not_ends_with: String
  product: ProductWhereInput
  parent: AttributeWhereInput
}

input ProductAttributeWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type ProductConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ProductEdge]!
  aggregate: AggregateProduct!
}

input ProductCreateInput {
  code: Int!
  name: String!
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandCreateOneInput
  category: SubCategoryCreateOneWithoutProductsInput!
  attributes: ProductAttributeCreateManyWithoutProductInput
  gallery: ProductGalleryCreateManyWithoutProductInput
  specs: ProductSpecificationCreateManyWithoutProductInput
  stock: ProductStockCreateManyWithoutProductInput
  comments: CommentCreateManyWithoutProductInput
}

input ProductCreateManyWithoutCategoryInput {
  create: [ProductCreateWithoutCategoryInput!]
  connect: [ProductWhereUniqueInput!]
}

input ProductCreateOneWithoutAttributesInput {
  create: ProductCreateWithoutAttributesInput
  connect: ProductWhereUniqueInput
}

input ProductCreateOneWithoutCommentsInput {
  create: ProductCreateWithoutCommentsInput
  connect: ProductWhereUniqueInput
}

input ProductCreateOneWithoutGalleryInput {
  create: ProductCreateWithoutGalleryInput
  connect: ProductWhereUniqueInput
}

input ProductCreateOneWithoutSpecsInput {
  create: ProductCreateWithoutSpecsInput
  connect: ProductWhereUniqueInput
}

input ProductCreateOneWithoutStockInput {
  create: ProductCreateWithoutStockInput
  connect: ProductWhereUniqueInput
}

input ProductCreateWithoutAttributesInput {
  code: Int!
  name: String!
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandCreateOneInput
  category: SubCategoryCreateOneWithoutProductsInput!
  gallery: ProductGalleryCreateManyWithoutProductInput
  specs: ProductSpecificationCreateManyWithoutProductInput
  stock: ProductStockCreateManyWithoutProductInput
  comments: CommentCreateManyWithoutProductInput
}

input ProductCreateWithoutCategoryInput {
  code: Int!
  name: String!
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandCreateOneInput
  attributes: ProductAttributeCreateManyWithoutProductInput
  gallery: ProductGalleryCreateManyWithoutProductInput
  specs: ProductSpecificationCreateManyWithoutProductInput
  stock: ProductStockCreateManyWithoutProductInput
  comments: CommentCreateManyWithoutProductInput
}

input ProductCreateWithoutCommentsInput {
  code: Int!
  name: String!
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandCreateOneInput
  category: SubCategoryCreateOneWithoutProductsInput!
  attributes: ProductAttributeCreateManyWithoutProductInput
  gallery: ProductGalleryCreateManyWithoutProductInput
  specs: ProductSpecificationCreateManyWithoutProductInput
  stock: ProductStockCreateManyWithoutProductInput
}

input ProductCreateWithoutGalleryInput {
  code: Int!
  name: String!
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandCreateOneInput
  category: SubCategoryCreateOneWithoutProductsInput!
  attributes: ProductAttributeCreateManyWithoutProductInput
  specs: ProductSpecificationCreateManyWithoutProductInput
  stock: ProductStockCreateManyWithoutProductInput
  comments: CommentCreateManyWithoutProductInput
}

input ProductCreateWithoutSpecsInput {
  code: Int!
  name: String!
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandCreateOneInput
  category: SubCategoryCreateOneWithoutProductsInput!
  attributes: ProductAttributeCreateManyWithoutProductInput
  gallery: ProductGalleryCreateManyWithoutProductInput
  stock: ProductStockCreateManyWithoutProductInput
  comments: CommentCreateManyWithoutProductInput
}

input ProductCreateWithoutStockInput {
  code: Int!
  name: String!
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandCreateOneInput
  category: SubCategoryCreateOneWithoutProductsInput!
  attributes: ProductAttributeCreateManyWithoutProductInput
  gallery: ProductGalleryCreateManyWithoutProductInput
  specs: ProductSpecificationCreateManyWithoutProductInput
  comments: CommentCreateManyWithoutProductInput
}

"""
An edge in a connection.
"""
type ProductEdge {
  """
  The item at the end of the edge.
  """
  node: Product!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type ProductGalleryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ProductGalleryEdge]!
  aggregate: AggregateProductGallery!
}

input ProductGalleryCreateInput {
  code: Int!
  img_url: String!
  img_desc: String!
  sort_order: Int!
  product: ProductCreateOneWithoutGalleryInput!
}

input ProductGalleryCreateManyWithoutProductInput {
  create: [ProductGalleryCreateWithoutProductInput!]
  connect: [ProductGalleryWhereUniqueInput!]
}

input ProductGalleryCreateWithoutProductInput {
  code: Int!
  img_url: String!
  img_desc: String!
  sort_order: Int!
}

"""
An edge in a connection.
"""
type ProductGalleryEdge {
  """
  The item at the end of the edge.
  """
  node: ProductGallery!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ProductGalleryOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  img_url_ASC
  img_url_DESC
  img_desc_ASC
  img_desc_DESC
  sort_order_ASC
  sort_order_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ProductGalleryPreviousValues {
  id: ID!
  code: Int!
  img_url: String!
  img_desc: String!
  sort_order: Int!
}

type ProductGallerySubscriptionPayload {
  mutation: MutationType!
  node: ProductGallery
  updatedFields: [String!]
  previousValues: ProductGalleryPreviousValues
}

input ProductGallerySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductGallerySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductGallerySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProductGalleryWhereInput
}

input ProductGalleryUpdateInput {
  code: Int
  img_url: String
  img_desc: String
  sort_order: Int
  product: ProductUpdateOneWithoutGalleryInput
}

input ProductGalleryUpdateManyWithoutProductInput {
  create: [ProductGalleryCreateWithoutProductInput!]
  connect: [ProductGalleryWhereUniqueInput!]
  disconnect: [ProductGalleryWhereUniqueInput!]
  delete: [ProductGalleryWhereUniqueInput!]
  update: [ProductGalleryUpdateWithWhereUniqueWithoutProductInput!]
  upsert: [ProductGalleryUpsertWithWhereUniqueWithoutProductInput!]
}

input ProductGalleryUpdateWithoutProductDataInput {
  code: Int
  img_url: String
  img_desc: String
  sort_order: Int
}

input ProductGalleryUpdateWithWhereUniqueWithoutProductInput {
  where: ProductGalleryWhereUniqueInput!
  data: ProductGalleryUpdateWithoutProductDataInput!
}

input ProductGalleryUpsertWithWhereUniqueWithoutProductInput {
  where: ProductGalleryWhereUniqueInput!
  update: ProductGalleryUpdateWithoutProductDataInput!
  create: ProductGalleryCreateWithoutProductInput!
}

input ProductGalleryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductGalleryWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductGalleryWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  img_url: String
  """
  All values that are not equal to given value.
  """
  img_url_not: String
  """
  All values that are contained in given list.
  """
  img_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  img_url_not_in: [String!]
  """
  All values less than the given value.
  """
  img_url_lt: String
  """
  All values less than or equal the given value.
  """
  img_url_lte: String
  """
  All values greater than the given value.
  """
  img_url_gt: String
  """
  All values greater than or equal the given value.
  """
  img_url_gte: String
  """
  All values containing the given string.
  """
  img_url_contains: String
  """
  All values not containing the given string.
  """
  img_url_not_contains: String
  """
  All values starting with the given string.
  """
  img_url_starts_with: String
  """
  All values not starting with the given string.
  """
  img_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  img_url_ends_with: String
  """
  All values not ending with the given string.
  """
  img_url_not_ends_with: String
  img_desc: String
  """
  All values that are not equal to given value.
  """
  img_desc_not: String
  """
  All values that are contained in given list.
  """
  img_desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  img_desc_not_in: [String!]
  """
  All values less than the given value.
  """
  img_desc_lt: String
  """
  All values less than or equal the given value.
  """
  img_desc_lte: String
  """
  All values greater than the given value.
  """
  img_desc_gt: String
  """
  All values greater than or equal the given value.
  """
  img_desc_gte: String
  """
  All values containing the given string.
  """
  img_desc_contains: String
  """
  All values not containing the given string.
  """
  img_desc_not_contains: String
  """
  All values starting with the given string.
  """
  img_desc_starts_with: String
  """
  All values not starting with the given string.
  """
  img_desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  img_desc_ends_with: String
  """
  All values not ending with the given string.
  """
  img_desc_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  product: ProductWhereInput
}

input ProductGalleryWhereUniqueInput {
  id: ID
  code: Int
}

enum ProductOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  product_sn_ASC
  product_sn_DESC
  keywords_ASC
  keywords_DESC
  product_brief_ASC
  product_brief_DESC
  product_desc_ASC
  product_desc_DESC
  product_unit_ASC
  product_unit_DESC
  primary_pic_url_ASC
  primary_pic_url_DESC
  list_pic_url_ASC
  list_pic_url_DESC
  promotion_desc_ASC
  promotion_desc_DESC
  promotion_tag_ASC
  promotion_tag_DESC
  product_number_ASC
  product_number_DESC
  sort_order_ASC
  sort_order_DESC
  sell_volume_ASC
  sell_volume_DESC
  primary_product_id_ASC
  primary_product_id_DESC
  counter_price_ASC
  counter_price_DESC
  extra_price_ASC
  extra_price_DESC
  retail_price_ASC
  retail_price_DESC
  unit_price_ASC
  unit_price_DESC
  app_excluesive_price_ASC
  app_excluesive_price_DESC
  is_new_ASC
  is_new_DESC
  is_on_sale_ASC
  is_on_sale_DESC
  is_delete_ASC
  is_delete_DESC
  is_limited_ASC
  is_limited_DESC
  is_hot_ASC
  is_hot_DESC
}

type ProductPreviousValues {
  id: ID!
  code: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  product_sn: String!
  keywords: String!
  product_brief: String!
  product_desc: String!
  product_unit: String
  primary_pic_url: String!
  list_pic_url: String!
  promotion_desc: String!
  promotion_tag: String!
  product_number: Int!
  sort_order: Int!
  sell_volume: Int!
  primary_product_id: Int
  counter_price: Float!
  extra_price: Float!
  retail_price: Float!
  unit_price: Float!
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean!
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
}

"""
A connection to a list of items.
"""
type ProductSpecificationConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ProductSpecificationEdge]!
  aggregate: AggregateProductSpecification!
}

input ProductSpecificationCreateInput {
  code: Int!
  value: String!
  pic_url: String
  parent: SpecificationCreateOneWithoutProduct_specsInput!
  product: ProductCreateOneWithoutSpecsInput!
}

input ProductSpecificationCreateManyWithoutParentInput {
  create: [ProductSpecificationCreateWithoutParentInput!]
  connect: [ProductSpecificationWhereUniqueInput!]
}

input ProductSpecificationCreateManyWithoutProductInput {
  create: [ProductSpecificationCreateWithoutProductInput!]
  connect: [ProductSpecificationWhereUniqueInput!]
}

input ProductSpecificationCreateWithoutParentInput {
  code: Int!
  value: String!
  pic_url: String
  product: ProductCreateOneWithoutSpecsInput!
}

input ProductSpecificationCreateWithoutProductInput {
  code: Int!
  value: String!
  pic_url: String
  parent: SpecificationCreateOneWithoutProduct_specsInput!
}

"""
An edge in a connection.
"""
type ProductSpecificationEdge {
  """
  The item at the end of the edge.
  """
  node: ProductSpecification!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ProductSpecificationOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  value_ASC
  value_DESC
  pic_url_ASC
  pic_url_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ProductSpecificationPreviousValues {
  id: ID!
  code: Int!
  value: String!
  pic_url: String
}

type ProductSpecificationSubscriptionPayload {
  mutation: MutationType!
  node: ProductSpecification
  updatedFields: [String!]
  previousValues: ProductSpecificationPreviousValues
}

input ProductSpecificationSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductSpecificationSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductSpecificationSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProductSpecificationWhereInput
}

input ProductSpecificationUpdateInput {
  code: Int
  value: String
  pic_url: String
  parent: SpecificationUpdateOneWithoutProduct_specsInput
  product: ProductUpdateOneWithoutSpecsInput
}

input ProductSpecificationUpdateManyWithoutParentInput {
  create: [ProductSpecificationCreateWithoutParentInput!]
  connect: [ProductSpecificationWhereUniqueInput!]
  disconnect: [ProductSpecificationWhereUniqueInput!]
  delete: [ProductSpecificationWhereUniqueInput!]
  update: [ProductSpecificationUpdateWithWhereUniqueWithoutParentInput!]
  upsert: [ProductSpecificationUpsertWithWhereUniqueWithoutParentInput!]
}

input ProductSpecificationUpdateManyWithoutProductInput {
  create: [ProductSpecificationCreateWithoutProductInput!]
  connect: [ProductSpecificationWhereUniqueInput!]
  disconnect: [ProductSpecificationWhereUniqueInput!]
  delete: [ProductSpecificationWhereUniqueInput!]
  update: [ProductSpecificationUpdateWithWhereUniqueWithoutProductInput!]
  upsert: [ProductSpecificationUpsertWithWhereUniqueWithoutProductInput!]
}

input ProductSpecificationUpdateWithoutParentDataInput {
  code: Int
  value: String
  pic_url: String
  product: ProductUpdateOneWithoutSpecsInput
}

input ProductSpecificationUpdateWithoutProductDataInput {
  code: Int
  value: String
  pic_url: String
  parent: SpecificationUpdateOneWithoutProduct_specsInput
}

input ProductSpecificationUpdateWithWhereUniqueWithoutParentInput {
  where: ProductSpecificationWhereUniqueInput!
  data: ProductSpecificationUpdateWithoutParentDataInput!
}

input ProductSpecificationUpdateWithWhereUniqueWithoutProductInput {
  where: ProductSpecificationWhereUniqueInput!
  data: ProductSpecificationUpdateWithoutProductDataInput!
}

input ProductSpecificationUpsertWithWhereUniqueWithoutParentInput {
  where: ProductSpecificationWhereUniqueInput!
  update: ProductSpecificationUpdateWithoutParentDataInput!
  create: ProductSpecificationCreateWithoutParentInput!
}

input ProductSpecificationUpsertWithWhereUniqueWithoutProductInput {
  where: ProductSpecificationWhereUniqueInput!
  update: ProductSpecificationUpdateWithoutProductDataInput!
  create: ProductSpecificationCreateWithoutProductInput!
}

input ProductSpecificationWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductSpecificationWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductSpecificationWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  value: String
  """
  All values that are not equal to given value.
  """
  value_not: String
  """
  All values that are contained in given list.
  """
  value_in: [String!]
  """
  All values that are not contained in given list.
  """
  value_not_in: [String!]
  """
  All values less than the given value.
  """
  value_lt: String
  """
  All values less than or equal the given value.
  """
  value_lte: String
  """
  All values greater than the given value.
  """
  value_gt: String
  """
  All values greater than or equal the given value.
  """
  value_gte: String
  """
  All values containing the given string.
  """
  value_contains: String
  """
  All values not containing the given string.
  """
  value_not_contains: String
  """
  All values starting with the given string.
  """
  value_starts_with: String
  """
  All values not starting with the given string.
  """
  value_not_starts_with: String
  """
  All values ending with the given string.
  """
  value_ends_with: String
  """
  All values not ending with the given string.
  """
  value_not_ends_with: String
  pic_url: String
  """
  All values that are not equal to given value.
  """
  pic_url_not: String
  """
  All values that are contained in given list.
  """
  pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  pic_url_lte: String
  """
  All values greater than the given value.
  """
  pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  pic_url_gte: String
  """
  All values containing the given string.
  """
  pic_url_contains: String
  """
  All values not containing the given string.
  """
  pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  pic_url_not_ends_with: String
  parent: SpecificationWhereInput
  product: ProductWhereInput
}

input ProductSpecificationWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type ProductStockConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ProductStockEdge]!
  aggregate: AggregateProductStock!
}

input ProductStockCreateInput {
  code: Int!
  type: String!
  sn: String!
  total: Int!
  retail_price: Float!
  product: ProductCreateOneWithoutStockInput!
}

input ProductStockCreateManyWithoutProductInput {
  create: [ProductStockCreateWithoutProductInput!]
  connect: [ProductStockWhereUniqueInput!]
}

input ProductStockCreateOneInput {
  create: ProductStockCreateInput
  connect: ProductStockWhereUniqueInput
}

input ProductStockCreateWithoutProductInput {
  code: Int!
  type: String!
  sn: String!
  total: Int!
  retail_price: Float!
}

"""
An edge in a connection.
"""
type ProductStockEdge {
  """
  The item at the end of the edge.
  """
  node: ProductStock!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ProductStockOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  type_ASC
  type_DESC
  sn_ASC
  sn_DESC
  total_ASC
  total_DESC
  retail_price_ASC
  retail_price_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ProductStockPreviousValues {
  id: ID!
  code: Int!
  type: String!
  sn: String!
  total: Int!
  retail_price: Float!
}

type ProductStockSubscriptionPayload {
  mutation: MutationType!
  node: ProductStock
  updatedFields: [String!]
  previousValues: ProductStockPreviousValues
}

input ProductStockSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductStockSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductStockSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProductStockWhereInput
}

input ProductStockUpdateDataInput {
  code: Int
  type: String
  sn: String
  total: Int
  retail_price: Float
  product: ProductUpdateOneWithoutStockInput
}

input ProductStockUpdateInput {
  code: Int
  type: String
  sn: String
  total: Int
  retail_price: Float
  product: ProductUpdateOneWithoutStockInput
}

input ProductStockUpdateManyWithoutProductInput {
  create: [ProductStockCreateWithoutProductInput!]
  connect: [ProductStockWhereUniqueInput!]
  disconnect: [ProductStockWhereUniqueInput!]
  delete: [ProductStockWhereUniqueInput!]
  update: [ProductStockUpdateWithWhereUniqueWithoutProductInput!]
  upsert: [ProductStockUpsertWithWhereUniqueWithoutProductInput!]
}

input ProductStockUpdateOneInput {
  create: ProductStockCreateInput
  connect: ProductStockWhereUniqueInput
  delete: Boolean
  update: ProductStockUpdateDataInput
  upsert: ProductStockUpsertNestedInput
}

input ProductStockUpdateWithoutProductDataInput {
  code: Int
  type: String
  sn: String
  total: Int
  retail_price: Float
}

input ProductStockUpdateWithWhereUniqueWithoutProductInput {
  where: ProductStockWhereUniqueInput!
  data: ProductStockUpdateWithoutProductDataInput!
}

input ProductStockUpsertNestedInput {
  update: ProductStockUpdateDataInput!
  create: ProductStockCreateInput!
}

input ProductStockUpsertWithWhereUniqueWithoutProductInput {
  where: ProductStockWhereUniqueInput!
  update: ProductStockUpdateWithoutProductDataInput!
  create: ProductStockCreateWithoutProductInput!
}

input ProductStockWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductStockWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductStockWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  type: String
  """
  All values that are not equal to given value.
  """
  type_not: String
  """
  All values that are contained in given list.
  """
  type_in: [String!]
  """
  All values that are not contained in given list.
  """
  type_not_in: [String!]
  """
  All values less than the given value.
  """
  type_lt: String
  """
  All values less than or equal the given value.
  """
  type_lte: String
  """
  All values greater than the given value.
  """
  type_gt: String
  """
  All values greater than or equal the given value.
  """
  type_gte: String
  """
  All values containing the given string.
  """
  type_contains: String
  """
  All values not containing the given string.
  """
  type_not_contains: String
  """
  All values starting with the given string.
  """
  type_starts_with: String
  """
  All values not starting with the given string.
  """
  type_not_starts_with: String
  """
  All values ending with the given string.
  """
  type_ends_with: String
  """
  All values not ending with the given string.
  """
  type_not_ends_with: String
  sn: String
  """
  All values that are not equal to given value.
  """
  sn_not: String
  """
  All values that are contained in given list.
  """
  sn_in: [String!]
  """
  All values that are not contained in given list.
  """
  sn_not_in: [String!]
  """
  All values less than the given value.
  """
  sn_lt: String
  """
  All values less than or equal the given value.
  """
  sn_lte: String
  """
  All values greater than the given value.
  """
  sn_gt: String
  """
  All values greater than or equal the given value.
  """
  sn_gte: String
  """
  All values containing the given string.
  """
  sn_contains: String
  """
  All values not containing the given string.
  """
  sn_not_contains: String
  """
  All values starting with the given string.
  """
  sn_starts_with: String
  """
  All values not starting with the given string.
  """
  sn_not_starts_with: String
  """
  All values ending with the given string.
  """
  sn_ends_with: String
  """
  All values not ending with the given string.
  """
  sn_not_ends_with: String
  total: Int
  """
  All values that are not equal to given value.
  """
  total_not: Int
  """
  All values that are contained in given list.
  """
  total_in: [Int!]
  """
  All values that are not contained in given list.
  """
  total_not_in: [Int!]
  """
  All values less than the given value.
  """
  total_lt: Int
  """
  All values less than or equal the given value.
  """
  total_lte: Int
  """
  All values greater than the given value.
  """
  total_gt: Int
  """
  All values greater than or equal the given value.
  """
  total_gte: Int
  retail_price: Float
  """
  All values that are not equal to given value.
  """
  retail_price_not: Float
  """
  All values that are contained in given list.
  """
  retail_price_in: [Float!]
  """
  All values that are not contained in given list.
  """
  retail_price_not_in: [Float!]
  """
  All values less than the given value.
  """
  retail_price_lt: Float
  """
  All values less than or equal the given value.
  """
  retail_price_lte: Float
  """
  All values greater than the given value.
  """
  retail_price_gt: Float
  """
  All values greater than or equal the given value.
  """
  retail_price_gte: Float
  product: ProductWhereInput
}

input ProductStockWhereUniqueInput {
  id: ID
  code: Int
}

type ProductSubscriptionPayload {
  mutation: MutationType!
  node: Product
  updatedFields: [String!]
  previousValues: ProductPreviousValues
}

input ProductSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProductWhereInput
}

input ProductUpdateInput {
  code: Int
  name: String
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandUpdateOneInput
  category: SubCategoryUpdateOneWithoutProductsInput
  attributes: ProductAttributeUpdateManyWithoutProductInput
  gallery: ProductGalleryUpdateManyWithoutProductInput
  specs: ProductSpecificationUpdateManyWithoutProductInput
  stock: ProductStockUpdateManyWithoutProductInput
  comments: CommentUpdateManyWithoutProductInput
}

input ProductUpdateManyWithoutCategoryInput {
  create: [ProductCreateWithoutCategoryInput!]
  connect: [ProductWhereUniqueInput!]
  disconnect: [ProductWhereUniqueInput!]
  delete: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutCategoryInput!]
}

input ProductUpdateOneWithoutAttributesInput {
  create: ProductCreateWithoutAttributesInput
  connect: ProductWhereUniqueInput
  delete: Boolean
  update: ProductUpdateWithoutAttributesDataInput
  upsert: ProductUpsertWithoutAttributesInput
}

input ProductUpdateOneWithoutCommentsInput {
  create: ProductCreateWithoutCommentsInput
  connect: ProductWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProductUpdateWithoutCommentsDataInput
  upsert: ProductUpsertWithoutCommentsInput
}

input ProductUpdateOneWithoutGalleryInput {
  create: ProductCreateWithoutGalleryInput
  connect: ProductWhereUniqueInput
  delete: Boolean
  update: ProductUpdateWithoutGalleryDataInput
  upsert: ProductUpsertWithoutGalleryInput
}

input ProductUpdateOneWithoutSpecsInput {
  create: ProductCreateWithoutSpecsInput
  connect: ProductWhereUniqueInput
  delete: Boolean
  update: ProductUpdateWithoutSpecsDataInput
  upsert: ProductUpsertWithoutSpecsInput
}

input ProductUpdateOneWithoutStockInput {
  create: ProductCreateWithoutStockInput
  connect: ProductWhereUniqueInput
  delete: Boolean
  update: ProductUpdateWithoutStockDataInput
  upsert: ProductUpsertWithoutStockInput
}

input ProductUpdateWithoutAttributesDataInput {
  code: Int
  name: String
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandUpdateOneInput
  category: SubCategoryUpdateOneWithoutProductsInput
  gallery: ProductGalleryUpdateManyWithoutProductInput
  specs: ProductSpecificationUpdateManyWithoutProductInput
  stock: ProductStockUpdateManyWithoutProductInput
  comments: CommentUpdateManyWithoutProductInput
}

input ProductUpdateWithoutCategoryDataInput {
  code: Int
  name: String
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandUpdateOneInput
  attributes: ProductAttributeUpdateManyWithoutProductInput
  gallery: ProductGalleryUpdateManyWithoutProductInput
  specs: ProductSpecificationUpdateManyWithoutProductInput
  stock: ProductStockUpdateManyWithoutProductInput
  comments: CommentUpdateManyWithoutProductInput
}

input ProductUpdateWithoutCommentsDataInput {
  code: Int
  name: String
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandUpdateOneInput
  category: SubCategoryUpdateOneWithoutProductsInput
  attributes: ProductAttributeUpdateManyWithoutProductInput
  gallery: ProductGalleryUpdateManyWithoutProductInput
  specs: ProductSpecificationUpdateManyWithoutProductInput
  stock: ProductStockUpdateManyWithoutProductInput
}

input ProductUpdateWithoutGalleryDataInput {
  code: Int
  name: String
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandUpdateOneInput
  category: SubCategoryUpdateOneWithoutProductsInput
  attributes: ProductAttributeUpdateManyWithoutProductInput
  specs: ProductSpecificationUpdateManyWithoutProductInput
  stock: ProductStockUpdateManyWithoutProductInput
  comments: CommentUpdateManyWithoutProductInput
}

input ProductUpdateWithoutSpecsDataInput {
  code: Int
  name: String
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandUpdateOneInput
  category: SubCategoryUpdateOneWithoutProductsInput
  attributes: ProductAttributeUpdateManyWithoutProductInput
  gallery: ProductGalleryUpdateManyWithoutProductInput
  stock: ProductStockUpdateManyWithoutProductInput
  comments: CommentUpdateManyWithoutProductInput
}

input ProductUpdateWithoutStockDataInput {
  code: Int
  name: String
  product_sn: String
  keywords: String
  product_brief: String
  product_desc: String
  product_unit: String
  primary_pic_url: String
  list_pic_url: String
  promotion_desc: String
  promotion_tag: String
  product_number: Int
  sort_order: Int
  sell_volume: Int
  primary_product_id: Int
  counter_price: Float
  extra_price: Float
  retail_price: Float
  unit_price: Float
  app_excluesive_price: Float
  is_new: Boolean
  is_on_sale: Boolean
  is_delete: Boolean
  is_limited: Boolean
  is_hot: Boolean
  brand: BrandUpdateOneInput
  category: SubCategoryUpdateOneWithoutProductsInput
  attributes: ProductAttributeUpdateManyWithoutProductInput
  gallery: ProductGalleryUpdateManyWithoutProductInput
  specs: ProductSpecificationUpdateManyWithoutProductInput
  comments: CommentUpdateManyWithoutProductInput
}

input ProductUpdateWithWhereUniqueWithoutCategoryInput {
  where: ProductWhereUniqueInput!
  data: ProductUpdateWithoutCategoryDataInput!
}

input ProductUpsertWithoutAttributesInput {
  update: ProductUpdateWithoutAttributesDataInput!
  create: ProductCreateWithoutAttributesInput!
}

input ProductUpsertWithoutCommentsInput {
  update: ProductUpdateWithoutCommentsDataInput!
  create: ProductCreateWithoutCommentsInput!
}

input ProductUpsertWithoutGalleryInput {
  update: ProductUpdateWithoutGalleryDataInput!
  create: ProductCreateWithoutGalleryInput!
}

input ProductUpsertWithoutSpecsInput {
  update: ProductUpdateWithoutSpecsDataInput!
  create: ProductCreateWithoutSpecsInput!
}

input ProductUpsertWithoutStockInput {
  update: ProductUpdateWithoutStockDataInput!
  create: ProductCreateWithoutStockInput!
}

input ProductUpsertWithWhereUniqueWithoutCategoryInput {
  where: ProductWhereUniqueInput!
  update: ProductUpdateWithoutCategoryDataInput!
  create: ProductCreateWithoutCategoryInput!
}

input ProductWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProductWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProductWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  product_sn: String
  """
  All values that are not equal to given value.
  """
  product_sn_not: String
  """
  All values that are contained in given list.
  """
  product_sn_in: [String!]
  """
  All values that are not contained in given list.
  """
  product_sn_not_in: [String!]
  """
  All values less than the given value.
  """
  product_sn_lt: String
  """
  All values less than or equal the given value.
  """
  product_sn_lte: String
  """
  All values greater than the given value.
  """
  product_sn_gt: String
  """
  All values greater than or equal the given value.
  """
  product_sn_gte: String
  """
  All values containing the given string.
  """
  product_sn_contains: String
  """
  All values not containing the given string.
  """
  product_sn_not_contains: String
  """
  All values starting with the given string.
  """
  product_sn_starts_with: String
  """
  All values not starting with the given string.
  """
  product_sn_not_starts_with: String
  """
  All values ending with the given string.
  """
  product_sn_ends_with: String
  """
  All values not ending with the given string.
  """
  product_sn_not_ends_with: String
  keywords: String
  """
  All values that are not equal to given value.
  """
  keywords_not: String
  """
  All values that are contained in given list.
  """
  keywords_in: [String!]
  """
  All values that are not contained in given list.
  """
  keywords_not_in: [String!]
  """
  All values less than the given value.
  """
  keywords_lt: String
  """
  All values less than or equal the given value.
  """
  keywords_lte: String
  """
  All values greater than the given value.
  """
  keywords_gt: String
  """
  All values greater than or equal the given value.
  """
  keywords_gte: String
  """
  All values containing the given string.
  """
  keywords_contains: String
  """
  All values not containing the given string.
  """
  keywords_not_contains: String
  """
  All values starting with the given string.
  """
  keywords_starts_with: String
  """
  All values not starting with the given string.
  """
  keywords_not_starts_with: String
  """
  All values ending with the given string.
  """
  keywords_ends_with: String
  """
  All values not ending with the given string.
  """
  keywords_not_ends_with: String
  product_brief: String
  """
  All values that are not equal to given value.
  """
  product_brief_not: String
  """
  All values that are contained in given list.
  """
  product_brief_in: [String!]
  """
  All values that are not contained in given list.
  """
  product_brief_not_in: [String!]
  """
  All values less than the given value.
  """
  product_brief_lt: String
  """
  All values less than or equal the given value.
  """
  product_brief_lte: String
  """
  All values greater than the given value.
  """
  product_brief_gt: String
  """
  All values greater than or equal the given value.
  """
  product_brief_gte: String
  """
  All values containing the given string.
  """
  product_brief_contains: String
  """
  All values not containing the given string.
  """
  product_brief_not_contains: String
  """
  All values starting with the given string.
  """
  product_brief_starts_with: String
  """
  All values not starting with the given string.
  """
  product_brief_not_starts_with: String
  """
  All values ending with the given string.
  """
  product_brief_ends_with: String
  """
  All values not ending with the given string.
  """
  product_brief_not_ends_with: String
  product_desc: String
  """
  All values that are not equal to given value.
  """
  product_desc_not: String
  """
  All values that are contained in given list.
  """
  product_desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  product_desc_not_in: [String!]
  """
  All values less than the given value.
  """
  product_desc_lt: String
  """
  All values less than or equal the given value.
  """
  product_desc_lte: String
  """
  All values greater than the given value.
  """
  product_desc_gt: String
  """
  All values greater than or equal the given value.
  """
  product_desc_gte: String
  """
  All values containing the given string.
  """
  product_desc_contains: String
  """
  All values not containing the given string.
  """
  product_desc_not_contains: String
  """
  All values starting with the given string.
  """
  product_desc_starts_with: String
  """
  All values not starting with the given string.
  """
  product_desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  product_desc_ends_with: String
  """
  All values not ending with the given string.
  """
  product_desc_not_ends_with: String
  product_unit: String
  """
  All values that are not equal to given value.
  """
  product_unit_not: String
  """
  All values that are contained in given list.
  """
  product_unit_in: [String!]
  """
  All values that are not contained in given list.
  """
  product_unit_not_in: [String!]
  """
  All values less than the given value.
  """
  product_unit_lt: String
  """
  All values less than or equal the given value.
  """
  product_unit_lte: String
  """
  All values greater than the given value.
  """
  product_unit_gt: String
  """
  All values greater than or equal the given value.
  """
  product_unit_gte: String
  """
  All values containing the given string.
  """
  product_unit_contains: String
  """
  All values not containing the given string.
  """
  product_unit_not_contains: String
  """
  All values starting with the given string.
  """
  product_unit_starts_with: String
  """
  All values not starting with the given string.
  """
  product_unit_not_starts_with: String
  """
  All values ending with the given string.
  """
  product_unit_ends_with: String
  """
  All values not ending with the given string.
  """
  product_unit_not_ends_with: String
  primary_pic_url: String
  """
  All values that are not equal to given value.
  """
  primary_pic_url_not: String
  """
  All values that are contained in given list.
  """
  primary_pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  primary_pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  primary_pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  primary_pic_url_lte: String
  """
  All values greater than the given value.
  """
  primary_pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  primary_pic_url_gte: String
  """
  All values containing the given string.
  """
  primary_pic_url_contains: String
  """
  All values not containing the given string.
  """
  primary_pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  primary_pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  primary_pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  primary_pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  primary_pic_url_not_ends_with: String
  list_pic_url: String
  """
  All values that are not equal to given value.
  """
  list_pic_url_not: String
  """
  All values that are contained in given list.
  """
  list_pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  list_pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  list_pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  list_pic_url_lte: String
  """
  All values greater than the given value.
  """
  list_pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  list_pic_url_gte: String
  """
  All values containing the given string.
  """
  list_pic_url_contains: String
  """
  All values not containing the given string.
  """
  list_pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  list_pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  list_pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  list_pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  list_pic_url_not_ends_with: String
  promotion_desc: String
  """
  All values that are not equal to given value.
  """
  promotion_desc_not: String
  """
  All values that are contained in given list.
  """
  promotion_desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  promotion_desc_not_in: [String!]
  """
  All values less than the given value.
  """
  promotion_desc_lt: String
  """
  All values less than or equal the given value.
  """
  promotion_desc_lte: String
  """
  All values greater than the given value.
  """
  promotion_desc_gt: String
  """
  All values greater than or equal the given value.
  """
  promotion_desc_gte: String
  """
  All values containing the given string.
  """
  promotion_desc_contains: String
  """
  All values not containing the given string.
  """
  promotion_desc_not_contains: String
  """
  All values starting with the given string.
  """
  promotion_desc_starts_with: String
  """
  All values not starting with the given string.
  """
  promotion_desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  promotion_desc_ends_with: String
  """
  All values not ending with the given string.
  """
  promotion_desc_not_ends_with: String
  promotion_tag: String
  """
  All values that are not equal to given value.
  """
  promotion_tag_not: String
  """
  All values that are contained in given list.
  """
  promotion_tag_in: [String!]
  """
  All values that are not contained in given list.
  """
  promotion_tag_not_in: [String!]
  """
  All values less than the given value.
  """
  promotion_tag_lt: String
  """
  All values less than or equal the given value.
  """
  promotion_tag_lte: String
  """
  All values greater than the given value.
  """
  promotion_tag_gt: String
  """
  All values greater than or equal the given value.
  """
  promotion_tag_gte: String
  """
  All values containing the given string.
  """
  promotion_tag_contains: String
  """
  All values not containing the given string.
  """
  promotion_tag_not_contains: String
  """
  All values starting with the given string.
  """
  promotion_tag_starts_with: String
  """
  All values not starting with the given string.
  """
  promotion_tag_not_starts_with: String
  """
  All values ending with the given string.
  """
  promotion_tag_ends_with: String
  """
  All values not ending with the given string.
  """
  promotion_tag_not_ends_with: String
  product_number: Int
  """
  All values that are not equal to given value.
  """
  product_number_not: Int
  """
  All values that are contained in given list.
  """
  product_number_in: [Int!]
  """
  All values that are not contained in given list.
  """
  product_number_not_in: [Int!]
  """
  All values less than the given value.
  """
  product_number_lt: Int
  """
  All values less than or equal the given value.
  """
  product_number_lte: Int
  """
  All values greater than the given value.
  """
  product_number_gt: Int
  """
  All values greater than or equal the given value.
  """
  product_number_gte: Int
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  sell_volume: Int
  """
  All values that are not equal to given value.
  """
  sell_volume_not: Int
  """
  All values that are contained in given list.
  """
  sell_volume_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sell_volume_not_in: [Int!]
  """
  All values less than the given value.
  """
  sell_volume_lt: Int
  """
  All values less than or equal the given value.
  """
  sell_volume_lte: Int
  """
  All values greater than the given value.
  """
  sell_volume_gt: Int
  """
  All values greater than or equal the given value.
  """
  sell_volume_gte: Int
  primary_product_id: Int
  """
  All values that are not equal to given value.
  """
  primary_product_id_not: Int
  """
  All values that are contained in given list.
  """
  primary_product_id_in: [Int!]
  """
  All values that are not contained in given list.
  """
  primary_product_id_not_in: [Int!]
  """
  All values less than the given value.
  """
  primary_product_id_lt: Int
  """
  All values less than or equal the given value.
  """
  primary_product_id_lte: Int
  """
  All values greater than the given value.
  """
  primary_product_id_gt: Int
  """
  All values greater than or equal the given value.
  """
  primary_product_id_gte: Int
  counter_price: Float
  """
  All values that are not equal to given value.
  """
  counter_price_not: Float
  """
  All values that are contained in given list.
  """
  counter_price_in: [Float!]
  """
  All values that are not contained in given list.
  """
  counter_price_not_in: [Float!]
  """
  All values less than the given value.
  """
  counter_price_lt: Float
  """
  All values less than or equal the given value.
  """
  counter_price_lte: Float
  """
  All values greater than the given value.
  """
  counter_price_gt: Float
  """
  All values greater than or equal the given value.
  """
  counter_price_gte: Float
  extra_price: Float
  """
  All values that are not equal to given value.
  """
  extra_price_not: Float
  """
  All values that are contained in given list.
  """
  extra_price_in: [Float!]
  """
  All values that are not contained in given list.
  """
  extra_price_not_in: [Float!]
  """
  All values less than the given value.
  """
  extra_price_lt: Float
  """
  All values less than or equal the given value.
  """
  extra_price_lte: Float
  """
  All values greater than the given value.
  """
  extra_price_gt: Float
  """
  All values greater than or equal the given value.
  """
  extra_price_gte: Float
  retail_price: Float
  """
  All values that are not equal to given value.
  """
  retail_price_not: Float
  """
  All values that are contained in given list.
  """
  retail_price_in: [Float!]
  """
  All values that are not contained in given list.
  """
  retail_price_not_in: [Float!]
  """
  All values less than the given value.
  """
  retail_price_lt: Float
  """
  All values less than or equal the given value.
  """
  retail_price_lte: Float
  """
  All values greater than the given value.
  """
  retail_price_gt: Float
  """
  All values greater than or equal the given value.
  """
  retail_price_gte: Float
  unit_price: Float
  """
  All values that are not equal to given value.
  """
  unit_price_not: Float
  """
  All values that are contained in given list.
  """
  unit_price_in: [Float!]
  """
  All values that are not contained in given list.
  """
  unit_price_not_in: [Float!]
  """
  All values less than the given value.
  """
  unit_price_lt: Float
  """
  All values less than or equal the given value.
  """
  unit_price_lte: Float
  """
  All values greater than the given value.
  """
  unit_price_gt: Float
  """
  All values greater than or equal the given value.
  """
  unit_price_gte: Float
  app_excluesive_price: Float
  """
  All values that are not equal to given value.
  """
  app_excluesive_price_not: Float
  """
  All values that are contained in given list.
  """
  app_excluesive_price_in: [Float!]
  """
  All values that are not contained in given list.
  """
  app_excluesive_price_not_in: [Float!]
  """
  All values less than the given value.
  """
  app_excluesive_price_lt: Float
  """
  All values less than or equal the given value.
  """
  app_excluesive_price_lte: Float
  """
  All values greater than the given value.
  """
  app_excluesive_price_gt: Float
  """
  All values greater than or equal the given value.
  """
  app_excluesive_price_gte: Float
  is_new: Boolean
  """
  All values that are not equal to given value.
  """
  is_new_not: Boolean
  is_on_sale: Boolean
  """
  All values that are not equal to given value.
  """
  is_on_sale_not: Boolean
  is_delete: Boolean
  """
  All values that are not equal to given value.
  """
  is_delete_not: Boolean
  is_limited: Boolean
  """
  All values that are not equal to given value.
  """
  is_limited_not: Boolean
  is_hot: Boolean
  """
  All values that are not equal to given value.
  """
  is_hot_not: Boolean
  brand: BrandWhereInput
  category: SubCategoryWhereInput
  attributes_every: ProductAttributeWhereInput
  attributes_some: ProductAttributeWhereInput
  attributes_none: ProductAttributeWhereInput
  gallery_every: ProductGalleryWhereInput
  gallery_some: ProductGalleryWhereInput
  gallery_none: ProductGalleryWhereInput
  specs_every: ProductSpecificationWhereInput
  specs_some: ProductSpecificationWhereInput
  specs_none: ProductSpecificationWhereInput
  stock_every: ProductStockWhereInput
  stock_some: ProductStockWhereInput
  stock_none: ProductStockWhereInput
  comments_every: CommentWhereInput
  comments_some: CommentWhereInput
  comments_none: CommentWhereInput
}

input ProductWhereUniqueInput {
  id: ID
  code: Int
}

type Query {
  brands(where: BrandWhereInput, orderBy: BrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Brand]!
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  subCategories(where: SubCategoryWhereInput, orderBy: SubCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SubCategory]!
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product]!
  productAttributes(where: ProductAttributeWhereInput, orderBy: ProductAttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductAttribute]!
  productGalleries(where: ProductGalleryWhereInput, orderBy: ProductGalleryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductGallery]!
  productStocks(where: ProductStockWhereInput, orderBy: ProductStockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductStock]!
  channels(where: ChannelWhereInput, orderBy: ChannelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Channel]!
  ads(where: AdWhereInput, orderBy: AdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ad]!
  adPositions(where: AdPositionWhereInput, orderBy: AdPositionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdPosition]!
  topics(where: TopicWhereInput, orderBy: TopicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Topic]!
  topicCategories(where: TopicCategoryWhereInput, orderBy: TopicCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TopicCategory]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment]!
  commentPictures(where: CommentPictureWhereInput, orderBy: CommentPictureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentPicture]!
  policies(where: PolicyWhereInput, orderBy: PolicyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Policy]!
  attributes(where: AttributeWhereInput, orderBy: AttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Attribute]!
  attributeCategories(where: AttributeCategoryWhereInput, orderBy: AttributeCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AttributeCategory]!
  specifications(where: SpecificationWhereInput, orderBy: SpecificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Specification]!
  productSpecifications(where: ProductSpecificationWhereInput, orderBy: ProductSpecificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpecification]!
  carts(where: CartWhereInput, orderBy: CartOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cart]!
  brand(where: BrandWhereUniqueInput!): Brand
  category(where: CategoryWhereUniqueInput!): Category
  subCategory(where: SubCategoryWhereUniqueInput!): SubCategory
  product(where: ProductWhereUniqueInput!): Product
  productAttribute(where: ProductAttributeWhereUniqueInput!): ProductAttribute
  productGallery(where: ProductGalleryWhereUniqueInput!): ProductGallery
  productStock(where: ProductStockWhereUniqueInput!): ProductStock
  channel(where: ChannelWhereUniqueInput!): Channel
  ad(where: AdWhereUniqueInput!): Ad
  adPosition(where: AdPositionWhereUniqueInput!): AdPosition
  topic(where: TopicWhereUniqueInput!): Topic
  topicCategory(where: TopicCategoryWhereUniqueInput!): TopicCategory
  user(where: UserWhereUniqueInput!): User
  comment(where: CommentWhereUniqueInput!): Comment
  commentPicture(where: CommentPictureWhereUniqueInput!): CommentPicture
  policy(where: PolicyWhereUniqueInput!): Policy
  attribute(where: AttributeWhereUniqueInput!): Attribute
  attributeCategory(where: AttributeCategoryWhereUniqueInput!): AttributeCategory
  specification(where: SpecificationWhereUniqueInput!): Specification
  productSpecification(where: ProductSpecificationWhereUniqueInput!): ProductSpecification
  cart(where: CartWhereUniqueInput!): Cart
  brandsConnection(where: BrandWhereInput, orderBy: BrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BrandConnection!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  subCategoriesConnection(where: SubCategoryWhereInput, orderBy: SubCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SubCategoryConnection!
  productsConnection(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductConnection!
  productAttributesConnection(where: ProductAttributeWhereInput, orderBy: ProductAttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductAttributeConnection!
  productGalleriesConnection(where: ProductGalleryWhereInput, orderBy: ProductGalleryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductGalleryConnection!
  productStocksConnection(where: ProductStockWhereInput, orderBy: ProductStockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductStockConnection!
  channelsConnection(where: ChannelWhereInput, orderBy: ChannelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChannelConnection!
  adsConnection(where: AdWhereInput, orderBy: AdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdConnection!
  adPositionsConnection(where: AdPositionWhereInput, orderBy: AdPositionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdPositionConnection!
  topicsConnection(where: TopicWhereInput, orderBy: TopicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TopicConnection!
  topicCategoriesConnection(where: TopicCategoryWhereInput, orderBy: TopicCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TopicCategoryConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  commentsConnection(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection!
  commentPicturesConnection(where: CommentPictureWhereInput, orderBy: CommentPictureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentPictureConnection!
  policiesConnection(where: PolicyWhereInput, orderBy: PolicyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PolicyConnection!
  attributesConnection(where: AttributeWhereInput, orderBy: AttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AttributeConnection!
  attributeCategoriesConnection(where: AttributeCategoryWhereInput, orderBy: AttributeCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AttributeCategoryConnection!
  specificationsConnection(where: SpecificationWhereInput, orderBy: SpecificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpecificationConnection!
  productSpecificationsConnection(where: ProductSpecificationWhereInput, orderBy: ProductSpecificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductSpecificationConnection!
  cartsConnection(where: CartWhereInput, orderBy: CartOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CartConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

"""
A connection to a list of items.
"""
type SpecificationConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [SpecificationEdge]!
  aggregate: AggregateSpecification!
}

input SpecificationCreateInput {
  code: Int!
  name: String!
  sort_order: Int!
  product_specs: ProductSpecificationCreateManyWithoutParentInput
}

input SpecificationCreateOneWithoutProduct_specsInput {
  create: SpecificationCreateWithoutProduct_specsInput
  connect: SpecificationWhereUniqueInput
}

input SpecificationCreateWithoutProduct_specsInput {
  code: Int!
  name: String!
  sort_order: Int!
}

"""
An edge in a connection.
"""
type SpecificationEdge {
  """
  The item at the end of the edge.
  """
  node: Specification!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum SpecificationOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  sort_order_ASC
  sort_order_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type SpecificationPreviousValues {
  id: ID!
  code: Int!
  name: String!
  sort_order: Int!
}

type SpecificationSubscriptionPayload {
  mutation: MutationType!
  node: Specification
  updatedFields: [String!]
  previousValues: SpecificationPreviousValues
}

input SpecificationSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SpecificationSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [SpecificationSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SpecificationWhereInput
}

input SpecificationUpdateInput {
  code: Int
  name: String
  sort_order: Int
  product_specs: ProductSpecificationUpdateManyWithoutParentInput
}

input SpecificationUpdateOneWithoutProduct_specsInput {
  create: SpecificationCreateWithoutProduct_specsInput
  connect: SpecificationWhereUniqueInput
  delete: Boolean
  update: SpecificationUpdateWithoutProduct_specsDataInput
  upsert: SpecificationUpsertWithoutProduct_specsInput
}

input SpecificationUpdateWithoutProduct_specsDataInput {
  code: Int
  name: String
  sort_order: Int
}

input SpecificationUpsertWithoutProduct_specsInput {
  update: SpecificationUpdateWithoutProduct_specsDataInput!
  create: SpecificationCreateWithoutProduct_specsInput!
}

input SpecificationWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SpecificationWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [SpecificationWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  product_specs_every: ProductSpecificationWhereInput
  product_specs_some: ProductSpecificationWhereInput
  product_specs_none: ProductSpecificationWhereInput
}

input SpecificationWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type SubCategoryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [SubCategoryEdge]!
  aggregate: AggregateSubCategory!
}

input SubCategoryCreateInput {
  code: Int!
  name: String!
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  parent: CategoryCreateOneWithoutSubsInput!
  products: ProductCreateManyWithoutCategoryInput
}

input SubCategoryCreateManyWithoutParentInput {
  create: [SubCategoryCreateWithoutParentInput!]
  connect: [SubCategoryWhereUniqueInput!]
}

input SubCategoryCreateOneWithoutProductsInput {
  create: SubCategoryCreateWithoutProductsInput
  connect: SubCategoryWhereUniqueInput
}

input SubCategoryCreateWithoutParentInput {
  code: Int!
  name: String!
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  products: ProductCreateManyWithoutCategoryInput
}

input SubCategoryCreateWithoutProductsInput {
  code: Int!
  name: String!
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  parent: CategoryCreateOneWithoutSubsInput!
}

"""
An edge in a connection.
"""
type SubCategoryEdge {
  """
  The item at the end of the edge.
  """
  node: SubCategory!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum SubCategoryOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  keywords_ASC
  keywords_DESC
  front_desc_ASC
  front_desc_DESC
  sort_order_ASC
  sort_order_DESC
  show_index_ASC
  show_index_DESC
  is_show_ASC
  is_show_DESC
  banner_url_ASC
  banner_url_DESC
  icon_url_ASC
  icon_url_DESC
  img_url_ASC
  img_url_DESC
  wap_banner_url_ASC
  wap_banner_url_DESC
  level_ASC
  level_DESC
  type_ASC
  type_DESC
  front_name_ASC
  front_name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type SubCategoryPreviousValues {
  id: ID!
  code: Int!
  name: String!
  keywords: String!
  front_desc: String!
  sort_order: Int!
  show_index: Int!
  is_show: Boolean!
  banner_url: String!
  icon_url: String!
  img_url: String!
  wap_banner_url: String!
  level: String!
  type: Int!
  front_name: String!
}

type SubCategorySubscriptionPayload {
  mutation: MutationType!
  node: SubCategory
  updatedFields: [String!]
  previousValues: SubCategoryPreviousValues
}

input SubCategorySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SubCategorySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [SubCategorySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SubCategoryWhereInput
}

input SubCategoryUpdateInput {
  code: Int
  name: String
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  parent: CategoryUpdateOneWithoutSubsInput
  products: ProductUpdateManyWithoutCategoryInput
}

input SubCategoryUpdateManyWithoutParentInput {
  create: [SubCategoryCreateWithoutParentInput!]
  connect: [SubCategoryWhereUniqueInput!]
  disconnect: [SubCategoryWhereUniqueInput!]
  delete: [SubCategoryWhereUniqueInput!]
  update: [SubCategoryUpdateWithWhereUniqueWithoutParentInput!]
  upsert: [SubCategoryUpsertWithWhereUniqueWithoutParentInput!]
}

input SubCategoryUpdateOneWithoutProductsInput {
  create: SubCategoryCreateWithoutProductsInput
  connect: SubCategoryWhereUniqueInput
  delete: Boolean
  update: SubCategoryUpdateWithoutProductsDataInput
  upsert: SubCategoryUpsertWithoutProductsInput
}

input SubCategoryUpdateWithoutParentDataInput {
  code: Int
  name: String
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  products: ProductUpdateManyWithoutCategoryInput
}

input SubCategoryUpdateWithoutProductsDataInput {
  code: Int
  name: String
  keywords: String
  front_desc: String
  sort_order: Int
  show_index: Int
  is_show: Boolean
  banner_url: String
  icon_url: String
  img_url: String
  wap_banner_url: String
  level: String
  type: Int
  front_name: String
  parent: CategoryUpdateOneWithoutSubsInput
}

input SubCategoryUpdateWithWhereUniqueWithoutParentInput {
  where: SubCategoryWhereUniqueInput!
  data: SubCategoryUpdateWithoutParentDataInput!
}

input SubCategoryUpsertWithoutProductsInput {
  update: SubCategoryUpdateWithoutProductsDataInput!
  create: SubCategoryCreateWithoutProductsInput!
}

input SubCategoryUpsertWithWhereUniqueWithoutParentInput {
  where: SubCategoryWhereUniqueInput!
  update: SubCategoryUpdateWithoutParentDataInput!
  create: SubCategoryCreateWithoutParentInput!
}

input SubCategoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SubCategoryWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [SubCategoryWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  keywords: String
  """
  All values that are not equal to given value.
  """
  keywords_not: String
  """
  All values that are contained in given list.
  """
  keywords_in: [String!]
  """
  All values that are not contained in given list.
  """
  keywords_not_in: [String!]
  """
  All values less than the given value.
  """
  keywords_lt: String
  """
  All values less than or equal the given value.
  """
  keywords_lte: String
  """
  All values greater than the given value.
  """
  keywords_gt: String
  """
  All values greater than or equal the given value.
  """
  keywords_gte: String
  """
  All values containing the given string.
  """
  keywords_contains: String
  """
  All values not containing the given string.
  """
  keywords_not_contains: String
  """
  All values starting with the given string.
  """
  keywords_starts_with: String
  """
  All values not starting with the given string.
  """
  keywords_not_starts_with: String
  """
  All values ending with the given string.
  """
  keywords_ends_with: String
  """
  All values not ending with the given string.
  """
  keywords_not_ends_with: String
  front_desc: String
  """
  All values that are not equal to given value.
  """
  front_desc_not: String
  """
  All values that are contained in given list.
  """
  front_desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  front_desc_not_in: [String!]
  """
  All values less than the given value.
  """
  front_desc_lt: String
  """
  All values less than or equal the given value.
  """
  front_desc_lte: String
  """
  All values greater than the given value.
  """
  front_desc_gt: String
  """
  All values greater than or equal the given value.
  """
  front_desc_gte: String
  """
  All values containing the given string.
  """
  front_desc_contains: String
  """
  All values not containing the given string.
  """
  front_desc_not_contains: String
  """
  All values starting with the given string.
  """
  front_desc_starts_with: String
  """
  All values not starting with the given string.
  """
  front_desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  front_desc_ends_with: String
  """
  All values not ending with the given string.
  """
  front_desc_not_ends_with: String
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  show_index: Int
  """
  All values that are not equal to given value.
  """
  show_index_not: Int
  """
  All values that are contained in given list.
  """
  show_index_in: [Int!]
  """
  All values that are not contained in given list.
  """
  show_index_not_in: [Int!]
  """
  All values less than the given value.
  """
  show_index_lt: Int
  """
  All values less than or equal the given value.
  """
  show_index_lte: Int
  """
  All values greater than the given value.
  """
  show_index_gt: Int
  """
  All values greater than or equal the given value.
  """
  show_index_gte: Int
  is_show: Boolean
  """
  All values that are not equal to given value.
  """
  is_show_not: Boolean
  banner_url: String
  """
  All values that are not equal to given value.
  """
  banner_url_not: String
  """
  All values that are contained in given list.
  """
  banner_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  banner_url_not_in: [String!]
  """
  All values less than the given value.
  """
  banner_url_lt: String
  """
  All values less than or equal the given value.
  """
  banner_url_lte: String
  """
  All values greater than the given value.
  """
  banner_url_gt: String
  """
  All values greater than or equal the given value.
  """
  banner_url_gte: String
  """
  All values containing the given string.
  """
  banner_url_contains: String
  """
  All values not containing the given string.
  """
  banner_url_not_contains: String
  """
  All values starting with the given string.
  """
  banner_url_starts_with: String
  """
  All values not starting with the given string.
  """
  banner_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  banner_url_ends_with: String
  """
  All values not ending with the given string.
  """
  banner_url_not_ends_with: String
  icon_url: String
  """
  All values that are not equal to given value.
  """
  icon_url_not: String
  """
  All values that are contained in given list.
  """
  icon_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  icon_url_not_in: [String!]
  """
  All values less than the given value.
  """
  icon_url_lt: String
  """
  All values less than or equal the given value.
  """
  icon_url_lte: String
  """
  All values greater than the given value.
  """
  icon_url_gt: String
  """
  All values greater than or equal the given value.
  """
  icon_url_gte: String
  """
  All values containing the given string.
  """
  icon_url_contains: String
  """
  All values not containing the given string.
  """
  icon_url_not_contains: String
  """
  All values starting with the given string.
  """
  icon_url_starts_with: String
  """
  All values not starting with the given string.
  """
  icon_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  icon_url_ends_with: String
  """
  All values not ending with the given string.
  """
  icon_url_not_ends_with: String
  img_url: String
  """
  All values that are not equal to given value.
  """
  img_url_not: String
  """
  All values that are contained in given list.
  """
  img_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  img_url_not_in: [String!]
  """
  All values less than the given value.
  """
  img_url_lt: String
  """
  All values less than or equal the given value.
  """
  img_url_lte: String
  """
  All values greater than the given value.
  """
  img_url_gt: String
  """
  All values greater than or equal the given value.
  """
  img_url_gte: String
  """
  All values containing the given string.
  """
  img_url_contains: String
  """
  All values not containing the given string.
  """
  img_url_not_contains: String
  """
  All values starting with the given string.
  """
  img_url_starts_with: String
  """
  All values not starting with the given string.
  """
  img_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  img_url_ends_with: String
  """
  All values not ending with the given string.
  """
  img_url_not_ends_with: String
  wap_banner_url: String
  """
  All values that are not equal to given value.
  """
  wap_banner_url_not: String
  """
  All values that are contained in given list.
  """
  wap_banner_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  wap_banner_url_not_in: [String!]
  """
  All values less than the given value.
  """
  wap_banner_url_lt: String
  """
  All values less than or equal the given value.
  """
  wap_banner_url_lte: String
  """
  All values greater than the given value.
  """
  wap_banner_url_gt: String
  """
  All values greater than or equal the given value.
  """
  wap_banner_url_gte: String
  """
  All values containing the given string.
  """
  wap_banner_url_contains: String
  """
  All values not containing the given string.
  """
  wap_banner_url_not_contains: String
  """
  All values starting with the given string.
  """
  wap_banner_url_starts_with: String
  """
  All values not starting with the given string.
  """
  wap_banner_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  wap_banner_url_ends_with: String
  """
  All values not ending with the given string.
  """
  wap_banner_url_not_ends_with: String
  level: String
  """
  All values that are not equal to given value.
  """
  level_not: String
  """
  All values that are contained in given list.
  """
  level_in: [String!]
  """
  All values that are not contained in given list.
  """
  level_not_in: [String!]
  """
  All values less than the given value.
  """
  level_lt: String
  """
  All values less than or equal the given value.
  """
  level_lte: String
  """
  All values greater than the given value.
  """
  level_gt: String
  """
  All values greater than or equal the given value.
  """
  level_gte: String
  """
  All values containing the given string.
  """
  level_contains: String
  """
  All values not containing the given string.
  """
  level_not_contains: String
  """
  All values starting with the given string.
  """
  level_starts_with: String
  """
  All values not starting with the given string.
  """
  level_not_starts_with: String
  """
  All values ending with the given string.
  """
  level_ends_with: String
  """
  All values not ending with the given string.
  """
  level_not_ends_with: String
  type: Int
  """
  All values that are not equal to given value.
  """
  type_not: Int
  """
  All values that are contained in given list.
  """
  type_in: [Int!]
  """
  All values that are not contained in given list.
  """
  type_not_in: [Int!]
  """
  All values less than the given value.
  """
  type_lt: Int
  """
  All values less than or equal the given value.
  """
  type_lte: Int
  """
  All values greater than the given value.
  """
  type_gt: Int
  """
  All values greater than or equal the given value.
  """
  type_gte: Int
  front_name: String
  """
  All values that are not equal to given value.
  """
  front_name_not: String
  """
  All values that are contained in given list.
  """
  front_name_in: [String!]
  """
  All values that are not contained in given list.
  """
  front_name_not_in: [String!]
  """
  All values less than the given value.
  """
  front_name_lt: String
  """
  All values less than or equal the given value.
  """
  front_name_lte: String
  """
  All values greater than the given value.
  """
  front_name_gt: String
  """
  All values greater than or equal the given value.
  """
  front_name_gte: String
  """
  All values containing the given string.
  """
  front_name_contains: String
  """
  All values not containing the given string.
  """
  front_name_not_contains: String
  """
  All values starting with the given string.
  """
  front_name_starts_with: String
  """
  All values not starting with the given string.
  """
  front_name_not_starts_with: String
  """
  All values ending with the given string.
  """
  front_name_ends_with: String
  """
  All values not ending with the given string.
  """
  front_name_not_ends_with: String
  parent: CategoryWhereInput
  products_every: ProductWhereInput
  products_some: ProductWhereInput
  products_none: ProductWhereInput
}

input SubCategoryWhereUniqueInput {
  id: ID
  code: Int
}

type Subscription {
  brand(where: BrandSubscriptionWhereInput): BrandSubscriptionPayload
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  subCategory(where: SubCategorySubscriptionWhereInput): SubCategorySubscriptionPayload
  product(where: ProductSubscriptionWhereInput): ProductSubscriptionPayload
  productAttribute(where: ProductAttributeSubscriptionWhereInput): ProductAttributeSubscriptionPayload
  productGallery(where: ProductGallerySubscriptionWhereInput): ProductGallerySubscriptionPayload
  productStock(where: ProductStockSubscriptionWhereInput): ProductStockSubscriptionPayload
  channel(where: ChannelSubscriptionWhereInput): ChannelSubscriptionPayload
  ad(where: AdSubscriptionWhereInput): AdSubscriptionPayload
  adPosition(where: AdPositionSubscriptionWhereInput): AdPositionSubscriptionPayload
  topic(where: TopicSubscriptionWhereInput): TopicSubscriptionPayload
  topicCategory(where: TopicCategorySubscriptionWhereInput): TopicCategorySubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  comment(where: CommentSubscriptionWhereInput): CommentSubscriptionPayload
  commentPicture(where: CommentPictureSubscriptionWhereInput): CommentPictureSubscriptionPayload
  policy(where: PolicySubscriptionWhereInput): PolicySubscriptionPayload
  attribute(where: AttributeSubscriptionWhereInput): AttributeSubscriptionPayload
  attributeCategory(where: AttributeCategorySubscriptionWhereInput): AttributeCategorySubscriptionPayload
  specification(where: SpecificationSubscriptionWhereInput): SpecificationSubscriptionPayload
  productSpecification(where: ProductSpecificationSubscriptionWhereInput): ProductSpecificationSubscriptionPayload
  cart(where: CartSubscriptionWhereInput): CartSubscriptionPayload
}

"""
A connection to a list of items.
"""
type TopicCategoryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [TopicCategoryEdge]!
  aggregate: AggregateTopicCategory!
}

input TopicCategoryCreateInput {
  code: Int!
  title: String!
  pic_url: String!
  topics: TopicCreateManyWithoutTopic_categoryInput
}

input TopicCategoryCreateOneWithoutTopicsInput {
  create: TopicCategoryCreateWithoutTopicsInput
  connect: TopicCategoryWhereUniqueInput
}

input TopicCategoryCreateWithoutTopicsInput {
  code: Int!
  title: String!
  pic_url: String!
}

"""
An edge in a connection.
"""
type TopicCategoryEdge {
  """
  The item at the end of the edge.
  """
  node: TopicCategory!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TopicCategoryOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  title_ASC
  title_DESC
  pic_url_ASC
  pic_url_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type TopicCategoryPreviousValues {
  id: ID!
  code: Int!
  title: String!
  pic_url: String!
}

type TopicCategorySubscriptionPayload {
  mutation: MutationType!
  node: TopicCategory
  updatedFields: [String!]
  previousValues: TopicCategoryPreviousValues
}

input TopicCategorySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TopicCategorySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TopicCategorySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TopicCategoryWhereInput
}

input TopicCategoryUpdateInput {
  code: Int
  title: String
  pic_url: String
  topics: TopicUpdateManyWithoutTopic_categoryInput
}

input TopicCategoryUpdateOneWithoutTopicsInput {
  create: TopicCategoryCreateWithoutTopicsInput
  connect: TopicCategoryWhereUniqueInput
  delete: Boolean
  update: TopicCategoryUpdateWithoutTopicsDataInput
  upsert: TopicCategoryUpsertWithoutTopicsInput
}

input TopicCategoryUpdateWithoutTopicsDataInput {
  code: Int
  title: String
  pic_url: String
}

input TopicCategoryUpsertWithoutTopicsInput {
  update: TopicCategoryUpdateWithoutTopicsDataInput!
  create: TopicCategoryCreateWithoutTopicsInput!
}

input TopicCategoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TopicCategoryWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TopicCategoryWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values less than the given value.
  """
  title_lt: String
  """
  All values less than or equal the given value.
  """
  title_lte: String
  """
  All values greater than the given value.
  """
  title_gt: String
  """
  All values greater than or equal the given value.
  """
  title_gte: String
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  pic_url: String
  """
  All values that are not equal to given value.
  """
  pic_url_not: String
  """
  All values that are contained in given list.
  """
  pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  pic_url_lte: String
  """
  All values greater than the given value.
  """
  pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  pic_url_gte: String
  """
  All values containing the given string.
  """
  pic_url_contains: String
  """
  All values not containing the given string.
  """
  pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  pic_url_not_ends_with: String
  topics_every: TopicWhereInput
  topics_some: TopicWhereInput
  topics_none: TopicWhereInput
}

input TopicCategoryWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type TopicConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [TopicEdge]!
  aggregate: AggregateTopic!
}

input TopicCreateInput {
  code: Int!
  title: String!
  content: String
  avatar: String
  item_pic_url: String
  subtitle: String
  price_info: Float
  read_count: Int
  scene_pic_url: String
  topic_template_id: Int
  topic_tag_id: Int
  sort_order: Int
  is_show: Boolean
  topic_category: TopicCategoryCreateOneWithoutTopicsInput!
}

input TopicCreateManyWithoutTopic_categoryInput {
  create: [TopicCreateWithoutTopic_categoryInput!]
  connect: [TopicWhereUniqueInput!]
}

input TopicCreateWithoutTopic_categoryInput {
  code: Int!
  title: String!
  content: String
  avatar: String
  item_pic_url: String
  subtitle: String
  price_info: Float
  read_count: Int
  scene_pic_url: String
  topic_template_id: Int
  topic_tag_id: Int
  sort_order: Int
  is_show: Boolean
}

"""
An edge in a connection.
"""
type TopicEdge {
  """
  The item at the end of the edge.
  """
  node: Topic!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TopicOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  avatar_ASC
  avatar_DESC
  item_pic_url_ASC
  item_pic_url_DESC
  subtitle_ASC
  subtitle_DESC
  price_info_ASC
  price_info_DESC
  read_count_ASC
  read_count_DESC
  scene_pic_url_ASC
  scene_pic_url_DESC
  topic_template_id_ASC
  topic_template_id_DESC
  topic_tag_id_ASC
  topic_tag_id_DESC
  sort_order_ASC
  sort_order_DESC
  is_show_ASC
  is_show_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type TopicPreviousValues {
  id: ID!
  code: Int!
  title: String!
  content: String!
  avatar: String!
  item_pic_url: String!
  subtitle: String!
  price_info: Float!
  read_count: Int!
  scene_pic_url: String!
  topic_template_id: Int!
  topic_tag_id: Int!
  sort_order: Int!
  is_show: Boolean!
}

type TopicSubscriptionPayload {
  mutation: MutationType!
  node: Topic
  updatedFields: [String!]
  previousValues: TopicPreviousValues
}

input TopicSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TopicSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TopicSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TopicWhereInput
}

input TopicUpdateInput {
  code: Int
  title: String
  content: String
  avatar: String
  item_pic_url: String
  subtitle: String
  price_info: Float
  read_count: Int
  scene_pic_url: String
  topic_template_id: Int
  topic_tag_id: Int
  sort_order: Int
  is_show: Boolean
  topic_category: TopicCategoryUpdateOneWithoutTopicsInput
}

input TopicUpdateManyWithoutTopic_categoryInput {
  create: [TopicCreateWithoutTopic_categoryInput!]
  connect: [TopicWhereUniqueInput!]
  disconnect: [TopicWhereUniqueInput!]
  delete: [TopicWhereUniqueInput!]
  update: [TopicUpdateWithWhereUniqueWithoutTopic_categoryInput!]
  upsert: [TopicUpsertWithWhereUniqueWithoutTopic_categoryInput!]
}

input TopicUpdateWithoutTopic_categoryDataInput {
  code: Int
  title: String
  content: String
  avatar: String
  item_pic_url: String
  subtitle: String
  price_info: Float
  read_count: Int
  scene_pic_url: String
  topic_template_id: Int
  topic_tag_id: Int
  sort_order: Int
  is_show: Boolean
}

input TopicUpdateWithWhereUniqueWithoutTopic_categoryInput {
  where: TopicWhereUniqueInput!
  data: TopicUpdateWithoutTopic_categoryDataInput!
}

input TopicUpsertWithWhereUniqueWithoutTopic_categoryInput {
  where: TopicWhereUniqueInput!
  update: TopicUpdateWithoutTopic_categoryDataInput!
  create: TopicCreateWithoutTopic_categoryInput!
}

input TopicWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TopicWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TopicWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values less than the given value.
  """
  title_lt: String
  """
  All values less than or equal the given value.
  """
  title_lte: String
  """
  All values greater than the given value.
  """
  title_gt: String
  """
  All values greater than or equal the given value.
  """
  title_gte: String
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  content: String
  """
  All values that are not equal to given value.
  """
  content_not: String
  """
  All values that are contained in given list.
  """
  content_in: [String!]
  """
  All values that are not contained in given list.
  """
  content_not_in: [String!]
  """
  All values less than the given value.
  """
  content_lt: String
  """
  All values less than or equal the given value.
  """
  content_lte: String
  """
  All values greater than the given value.
  """
  content_gt: String
  """
  All values greater than or equal the given value.
  """
  content_gte: String
  """
  All values containing the given string.
  """
  content_contains: String
  """
  All values not containing the given string.
  """
  content_not_contains: String
  """
  All values starting with the given string.
  """
  content_starts_with: String
  """
  All values not starting with the given string.
  """
  content_not_starts_with: String
  """
  All values ending with the given string.
  """
  content_ends_with: String
  """
  All values not ending with the given string.
  """
  content_not_ends_with: String
  avatar: String
  """
  All values that are not equal to given value.
  """
  avatar_not: String
  """
  All values that are contained in given list.
  """
  avatar_in: [String!]
  """
  All values that are not contained in given list.
  """
  avatar_not_in: [String!]
  """
  All values less than the given value.
  """
  avatar_lt: String
  """
  All values less than or equal the given value.
  """
  avatar_lte: String
  """
  All values greater than the given value.
  """
  avatar_gt: String
  """
  All values greater than or equal the given value.
  """
  avatar_gte: String
  """
  All values containing the given string.
  """
  avatar_contains: String
  """
  All values not containing the given string.
  """
  avatar_not_contains: String
  """
  All values starting with the given string.
  """
  avatar_starts_with: String
  """
  All values not starting with the given string.
  """
  avatar_not_starts_with: String
  """
  All values ending with the given string.
  """
  avatar_ends_with: String
  """
  All values not ending with the given string.
  """
  avatar_not_ends_with: String
  item_pic_url: String
  """
  All values that are not equal to given value.
  """
  item_pic_url_not: String
  """
  All values that are contained in given list.
  """
  item_pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  item_pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  item_pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  item_pic_url_lte: String
  """
  All values greater than the given value.
  """
  item_pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  item_pic_url_gte: String
  """
  All values containing the given string.
  """
  item_pic_url_contains: String
  """
  All values not containing the given string.
  """
  item_pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  item_pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  item_pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  item_pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  item_pic_url_not_ends_with: String
  subtitle: String
  """
  All values that are not equal to given value.
  """
  subtitle_not: String
  """
  All values that are contained in given list.
  """
  subtitle_in: [String!]
  """
  All values that are not contained in given list.
  """
  subtitle_not_in: [String!]
  """
  All values less than the given value.
  """
  subtitle_lt: String
  """
  All values less than or equal the given value.
  """
  subtitle_lte: String
  """
  All values greater than the given value.
  """
  subtitle_gt: String
  """
  All values greater than or equal the given value.
  """
  subtitle_gte: String
  """
  All values containing the given string.
  """
  subtitle_contains: String
  """
  All values not containing the given string.
  """
  subtitle_not_contains: String
  """
  All values starting with the given string.
  """
  subtitle_starts_with: String
  """
  All values not starting with the given string.
  """
  subtitle_not_starts_with: String
  """
  All values ending with the given string.
  """
  subtitle_ends_with: String
  """
  All values not ending with the given string.
  """
  subtitle_not_ends_with: String
  price_info: Float
  """
  All values that are not equal to given value.
  """
  price_info_not: Float
  """
  All values that are contained in given list.
  """
  price_info_in: [Float!]
  """
  All values that are not contained in given list.
  """
  price_info_not_in: [Float!]
  """
  All values less than the given value.
  """
  price_info_lt: Float
  """
  All values less than or equal the given value.
  """
  price_info_lte: Float
  """
  All values greater than the given value.
  """
  price_info_gt: Float
  """
  All values greater than or equal the given value.
  """
  price_info_gte: Float
  read_count: Int
  """
  All values that are not equal to given value.
  """
  read_count_not: Int
  """
  All values that are contained in given list.
  """
  read_count_in: [Int!]
  """
  All values that are not contained in given list.
  """
  read_count_not_in: [Int!]
  """
  All values less than the given value.
  """
  read_count_lt: Int
  """
  All values less than or equal the given value.
  """
  read_count_lte: Int
  """
  All values greater than the given value.
  """
  read_count_gt: Int
  """
  All values greater than or equal the given value.
  """
  read_count_gte: Int
  scene_pic_url: String
  """
  All values that are not equal to given value.
  """
  scene_pic_url_not: String
  """
  All values that are contained in given list.
  """
  scene_pic_url_in: [String!]
  """
  All values that are not contained in given list.
  """
  scene_pic_url_not_in: [String!]
  """
  All values less than the given value.
  """
  scene_pic_url_lt: String
  """
  All values less than or equal the given value.
  """
  scene_pic_url_lte: String
  """
  All values greater than the given value.
  """
  scene_pic_url_gt: String
  """
  All values greater than or equal the given value.
  """
  scene_pic_url_gte: String
  """
  All values containing the given string.
  """
  scene_pic_url_contains: String
  """
  All values not containing the given string.
  """
  scene_pic_url_not_contains: String
  """
  All values starting with the given string.
  """
  scene_pic_url_starts_with: String
  """
  All values not starting with the given string.
  """
  scene_pic_url_not_starts_with: String
  """
  All values ending with the given string.
  """
  scene_pic_url_ends_with: String
  """
  All values not ending with the given string.
  """
  scene_pic_url_not_ends_with: String
  topic_template_id: Int
  """
  All values that are not equal to given value.
  """
  topic_template_id_not: Int
  """
  All values that are contained in given list.
  """
  topic_template_id_in: [Int!]
  """
  All values that are not contained in given list.
  """
  topic_template_id_not_in: [Int!]
  """
  All values less than the given value.
  """
  topic_template_id_lt: Int
  """
  All values less than or equal the given value.
  """
  topic_template_id_lte: Int
  """
  All values greater than the given value.
  """
  topic_template_id_gt: Int
  """
  All values greater than or equal the given value.
  """
  topic_template_id_gte: Int
  topic_tag_id: Int
  """
  All values that are not equal to given value.
  """
  topic_tag_id_not: Int
  """
  All values that are contained in given list.
  """
  topic_tag_id_in: [Int!]
  """
  All values that are not contained in given list.
  """
  topic_tag_id_not_in: [Int!]
  """
  All values less than the given value.
  """
  topic_tag_id_lt: Int
  """
  All values less than or equal the given value.
  """
  topic_tag_id_lte: Int
  """
  All values greater than the given value.
  """
  topic_tag_id_gt: Int
  """
  All values greater than or equal the given value.
  """
  topic_tag_id_gte: Int
  sort_order: Int
  """
  All values that are not equal to given value.
  """
  sort_order_not: Int
  """
  All values that are contained in given list.
  """
  sort_order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  sort_order_not_in: [Int!]
  """
  All values less than the given value.
  """
  sort_order_lt: Int
  """
  All values less than or equal the given value.
  """
  sort_order_lte: Int
  """
  All values greater than the given value.
  """
  sort_order_gt: Int
  """
  All values greater than or equal the given value.
  """
  sort_order_gte: Int
  is_show: Boolean
  """
  All values that are not equal to given value.
  """
  is_show_not: Boolean
  topic_category: TopicCategoryWhereInput
}

input TopicWhereUniqueInput {
  id: ID
  code: Int
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  code: Int!
  username: String!
  password: String!
  gender: Int!
  birthday: Int!
  last_login_time: Int!
  last_login_ip: String!
  nickname: String!
  mobile: String!
  register_ip: String!
  avatar: String!
  weixin_openid: String!
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  username_ASC
  username_DESC
  password_ASC
  password_DESC
  gender_ASC
  gender_DESC
  birthday_ASC
  birthday_DESC
  createdAt_ASC
  createdAt_DESC
  last_login_time_ASC
  last_login_time_DESC
  last_login_ip_ASC
  last_login_ip_DESC
  nickname_ASC
  nickname_DESC
  mobile_ASC
  mobile_DESC
  register_ip_ASC
  register_ip_DESC
  avatar_ASC
  avatar_DESC
  weixin_openid_ASC
  weixin_openid_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  code: Int!
  username: String!
  password: String!
  gender: Int!
  birthday: Int!
  createdAt: DateTime!
  last_login_time: Int!
  last_login_ip: String!
  nickname: String!
  mobile: String!
  register_ip: String!
  avatar: String!
  weixin_openid: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  code: Int
  username: String
  password: String
  gender: Int
  birthday: Int
  last_login_time: Int
  last_login_ip: String
  nickname: String
  mobile: String
  register_ip: String
  avatar: String
  weixin_openid: String
}

input UserUpdateInput {
  code: Int
  username: String
  password: String
  gender: Int
  birthday: Int
  last_login_time: Int
  last_login_ip: String
  nickname: String
  mobile: String
  register_ip: String
  avatar: String
  weixin_openid: String
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  code: Int
  """
  All values that are not equal to given value.
  """
  code_not: Int
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  """
  All values less than the given value.
  """
  code_lt: Int
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  """
  All values greater than the given value.
  """
  code_gt: Int
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
  username: String
  """
  All values that are not equal to given value.
  """
  username_not: String
  """
  All values that are contained in given list.
  """
  username_in: [String!]
  """
  All values that are not contained in given list.
  """
  username_not_in: [String!]
  """
  All values less than the given value.
  """
  username_lt: String
  """
  All values less than or equal the given value.
  """
  username_lte: String
  """
  All values greater than the given value.
  """
  username_gt: String
  """
  All values greater than or equal the given value.
  """
  username_gte: String
  """
  All values containing the given string.
  """
  username_contains: String
  """
  All values not containing the given string.
  """
  username_not_contains: String
  """
  All values starting with the given string.
  """
  username_starts_with: String
  """
  All values not starting with the given string.
  """
  username_not_starts_with: String
  """
  All values ending with the given string.
  """
  username_ends_with: String
  """
  All values not ending with the given string.
  """
  username_not_ends_with: String
  password: String
  """
  All values that are not equal to given value.
  """
  password_not: String
  """
  All values that are contained in given list.
  """
  password_in: [String!]
  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]
  """
  All values less than the given value.
  """
  password_lt: String
  """
  All values less than or equal the given value.
  """
  password_lte: String
  """
  All values greater than the given value.
  """
  password_gt: String
  """
  All values greater than or equal the given value.
  """
  password_gte: String
  """
  All values containing the given string.
  """
  password_contains: String
  """
  All values not containing the given string.
  """
  password_not_contains: String
  """
  All values starting with the given string.
  """
  password_starts_with: String
  """
  All values not starting with the given string.
  """
  password_not_starts_with: String
  """
  All values ending with the given string.
  """
  password_ends_with: String
  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  gender: Int
  """
  All values that are not equal to given value.
  """
  gender_not: Int
  """
  All values that are contained in given list.
  """
  gender_in: [Int!]
  """
  All values that are not contained in given list.
  """
  gender_not_in: [Int!]
  """
  All values less than the given value.
  """
  gender_lt: Int
  """
  All values less than or equal the given value.
  """
  gender_lte: Int
  """
  All values greater than the given value.
  """
  gender_gt: Int
  """
  All values greater than or equal the given value.
  """
  gender_gte: Int
  birthday: Int
  """
  All values that are not equal to given value.
  """
  birthday_not: Int
  """
  All values that are contained in given list.
  """
  birthday_in: [Int!]
  """
  All values that are not contained in given list.
  """
  birthday_not_in: [Int!]
  """
  All values less than the given value.
  """
  birthday_lt: Int
  """
  All values less than or equal the given value.
  """
  birthday_lte: Int
  """
  All values greater than the given value.
  """
  birthday_gt: Int
  """
  All values greater than or equal the given value.
  """
  birthday_gte: Int
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  last_login_time: Int
  """
  All values that are not equal to given value.
  """
  last_login_time_not: Int
  """
  All values that are contained in given list.
  """
  last_login_time_in: [Int!]
  """
  All values that are not contained in given list.
  """
  last_login_time_not_in: [Int!]
  """
  All values less than the given value.
  """
  last_login_time_lt: Int
  """
  All values less than or equal the given value.
  """
  last_login_time_lte: Int
  """
  All values greater than the given value.
  """
  last_login_time_gt: Int
  """
  All values greater than or equal the given value.
  """
  last_login_time_gte: Int
  last_login_ip: String
  """
  All values that are not equal to given value.
  """
  last_login_ip_not: String
  """
  All values that are contained in given list.
  """
  last_login_ip_in: [String!]
  """
  All values that are not contained in given list.
  """
  last_login_ip_not_in: [String!]
  """
  All values less than the given value.
  """
  last_login_ip_lt: String
  """
  All values less than or equal the given value.
  """
  last_login_ip_lte: String
  """
  All values greater than the given value.
  """
  last_login_ip_gt: String
  """
  All values greater than or equal the given value.
  """
  last_login_ip_gte: String
  """
  All values containing the given string.
  """
  last_login_ip_contains: String
  """
  All values not containing the given string.
  """
  last_login_ip_not_contains: String
  """
  All values starting with the given string.
  """
  last_login_ip_starts_with: String
  """
  All values not starting with the given string.
  """
  last_login_ip_not_starts_with: String
  """
  All values ending with the given string.
  """
  last_login_ip_ends_with: String
  """
  All values not ending with the given string.
  """
  last_login_ip_not_ends_with: String
  nickname: String
  """
  All values that are not equal to given value.
  """
  nickname_not: String
  """
  All values that are contained in given list.
  """
  nickname_in: [String!]
  """
  All values that are not contained in given list.
  """
  nickname_not_in: [String!]
  """
  All values less than the given value.
  """
  nickname_lt: String
  """
  All values less than or equal the given value.
  """
  nickname_lte: String
  """
  All values greater than the given value.
  """
  nickname_gt: String
  """
  All values greater than or equal the given value.
  """
  nickname_gte: String
  """
  All values containing the given string.
  """
  nickname_contains: String
  """
  All values not containing the given string.
  """
  nickname_not_contains: String
  """
  All values starting with the given string.
  """
  nickname_starts_with: String
  """
  All values not starting with the given string.
  """
  nickname_not_starts_with: String
  """
  All values ending with the given string.
  """
  nickname_ends_with: String
  """
  All values not ending with the given string.
  """
  nickname_not_ends_with: String
  mobile: String
  """
  All values that are not equal to given value.
  """
  mobile_not: String
  """
  All values that are contained in given list.
  """
  mobile_in: [String!]
  """
  All values that are not contained in given list.
  """
  mobile_not_in: [String!]
  """
  All values less than the given value.
  """
  mobile_lt: String
  """
  All values less than or equal the given value.
  """
  mobile_lte: String
  """
  All values greater than the given value.
  """
  mobile_gt: String
  """
  All values greater than or equal the given value.
  """
  mobile_gte: String
  """
  All values containing the given string.
  """
  mobile_contains: String
  """
  All values not containing the given string.
  """
  mobile_not_contains: String
  """
  All values starting with the given string.
  """
  mobile_starts_with: String
  """
  All values not starting with the given string.
  """
  mobile_not_starts_with: String
  """
  All values ending with the given string.
  """
  mobile_ends_with: String
  """
  All values not ending with the given string.
  """
  mobile_not_ends_with: String
  register_ip: String
  """
  All values that are not equal to given value.
  """
  register_ip_not: String
  """
  All values that are contained in given list.
  """
  register_ip_in: [String!]
  """
  All values that are not contained in given list.
  """
  register_ip_not_in: [String!]
  """
  All values less than the given value.
  """
  register_ip_lt: String
  """
  All values less than or equal the given value.
  """
  register_ip_lte: String
  """
  All values greater than the given value.
  """
  register_ip_gt: String
  """
  All values greater than or equal the given value.
  """
  register_ip_gte: String
  """
  All values containing the given string.
  """
  register_ip_contains: String
  """
  All values not containing the given string.
  """
  register_ip_not_contains: String
  """
  All values starting with the given string.
  """
  register_ip_starts_with: String
  """
  All values not starting with the given string.
  """
  register_ip_not_starts_with: String
  """
  All values ending with the given string.
  """
  register_ip_ends_with: String
  """
  All values not ending with the given string.
  """
  register_ip_not_ends_with: String
  avatar: String
  """
  All values that are not equal to given value.
  """
  avatar_not: String
  """
  All values that are contained in given list.
  """
  avatar_in: [String!]
  """
  All values that are not contained in given list.
  """
  avatar_not_in: [String!]
  """
  All values less than the given value.
  """
  avatar_lt: String
  """
  All values less than or equal the given value.
  """
  avatar_lte: String
  """
  All values greater than the given value.
  """
  avatar_gt: String
  """
  All values greater than or equal the given value.
  """
  avatar_gte: String
  """
  All values containing the given string.
  """
  avatar_contains: String
  """
  All values not containing the given string.
  """
  avatar_not_contains: String
  """
  All values starting with the given string.
  """
  avatar_starts_with: String
  """
  All values not starting with the given string.
  """
  avatar_not_starts_with: String
  """
  All values ending with the given string.
  """
  avatar_ends_with: String
  """
  All values not ending with the given string.
  """
  avatar_not_ends_with: String
  weixin_openid: String
  """
  All values that are not equal to given value.
  """
  weixin_openid_not: String
  """
  All values that are contained in given list.
  """
  weixin_openid_in: [String!]
  """
  All values that are not contained in given list.
  """
  weixin_openid_not_in: [String!]
  """
  All values less than the given value.
  """
  weixin_openid_lt: String
  """
  All values less than or equal the given value.
  """
  weixin_openid_lte: String
  """
  All values greater than the given value.
  """
  weixin_openid_gt: String
  """
  All values greater than or equal the given value.
  """
  weixin_openid_gte: String
  """
  All values containing the given string.
  """
  weixin_openid_contains: String
  """
  All values not containing the given string.
  """
  weixin_openid_not_contains: String
  """
  All values starting with the given string.
  """
  weixin_openid_starts_with: String
  """
  All values not starting with the given string.
  """
  weixin_openid_not_starts_with: String
  """
  All values ending with the given string.
  """
  weixin_openid_ends_with: String
  """
  All values not ending with the given string.
  """
  weixin_openid_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  code: Int
}
